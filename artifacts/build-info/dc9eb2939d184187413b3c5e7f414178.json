{
	"id": "dc9eb2939d184187413b3c5e7f414178",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"PramanToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/IAccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/access/AccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n// File: PramanToken.sol\n\n\npragma solidity ^0.8.20;\n\n\n\ncontract Praman is ERC20, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor() ERC20(\"Praman\", \"PRM\") {\n        hasRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        hasRole(MINTER_ROLE, msg.sender);\n\n        // Initial supply = 1,000,000 PRM\n        _mint(msg.sender, 1000000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"PramanToken_flattened.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 905,
								"contract": "PramanToken_flattened.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)900_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)900_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)900_storage"
							},
							"t_struct(RoleData)900_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 897,
										"contract": "PramanToken_flattened.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 899,
										"contract": "PramanToken_flattened.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "PramanToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "PramanToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "PramanToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "PramanToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "PramanToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Praman": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PramanToken_flattened.sol\":33804:34265  contract Praman is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"PramanToken_flattened.sol\":33919:34152  constructor() ERC20(\"Praman\", \"PRM\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"PramanToken_flattened.sol\":12484:12597  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x5072616d616e0000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x50524d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PramanToken_flattened.sol\":12558:12563  name_ */\n  dup2\n    /* \"PramanToken_flattened.sol\":12550:12555  _name */\n  0x03\n    /* \"PramanToken_flattened.sol\":12550:12563  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"PramanToken_flattened.sol\":12583:12590  symbol_ */\n  dup1\n    /* \"PramanToken_flattened.sol\":12573:12580  _symbol */\n  0x04\n    /* \"PramanToken_flattened.sol\":12573:12590  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"PramanToken_flattened.sol\":12484:12597  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"PramanToken_flattened.sol\":33966:34005  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_9\n    /* \"PramanToken_flattened.sol\":28961:28965  0x00 */\n  0x00\n    /* \"PramanToken_flattened.sol\":33974:33992  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"PramanToken_flattened.sol\":33994:34004  msg.sender */\n  caller\n    /* \"PramanToken_flattened.sol\":33966:33973  hasRole */\n  shl(0x20, tag_10)\n    /* \"PramanToken_flattened.sol\":33966:34005  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"PramanToken_flattened.sol\":34015:34047  hasRole(MINTER_ROLE, msg.sender) */\n  tag_11\n    /* \"PramanToken_flattened.sol\":33888:33912  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"PramanToken_flattened.sol\":34036:34046  msg.sender */\n  caller\n    /* \"PramanToken_flattened.sol\":34015:34022  hasRole */\n  shl(0x20, tag_10)\n    /* \"PramanToken_flattened.sol\":34015:34047  hasRole(MINTER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"PramanToken_flattened.sol\":34100:34145  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  tag_12\n    /* \"PramanToken_flattened.sol\":34106:34116  msg.sender */\n  caller\n    /* \"PramanToken_flattened.sol\":34134:34144  decimals() */\n  tag_13\n    /* \"PramanToken_flattened.sol\":34134:34142  decimals */\n  shl(0x20, tag_14)\n    /* \"PramanToken_flattened.sol\":34134:34144  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"PramanToken_flattened.sol\":34128:34130  10 */\n  0x0a\n    /* \"PramanToken_flattened.sol\":34128:34144  10 ** decimals() */\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"PramanToken_flattened.sol\":34118:34125  1000000 */\n  0x0f4240\n    /* \"PramanToken_flattened.sol\":34118:34144  1000000 * 10 ** decimals() */\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"PramanToken_flattened.sol\":34100:34105  _mint */\n  shl(0x20, tag_19)\n    /* \"PramanToken_flattened.sol\":34100:34145  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"PramanToken_flattened.sol\":33804:34265  contract Praman is ERC20, AccessControl {... */\n  jump(tag_20)\n    /* \"PramanToken_flattened.sol\":29550:29686  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_10:\n    /* \"PramanToken_flattened.sol\":29627:29631  bool */\n  0x00\n    /* \"PramanToken_flattened.sol\":29650:29656  _roles */\n  0x05\n    /* \"PramanToken_flattened.sol\":29650:29662  _roles[role] */\n  0x00\n    /* \"PramanToken_flattened.sol\":29657:29661  role */\n  dup5\n    /* \"PramanToken_flattened.sol\":29650:29662  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"PramanToken_flattened.sol\":29650:29670  _roles[role].hasRole */\n  0x00\n  add\n    /* \"PramanToken_flattened.sol\":29650:29679  _roles[role].hasRole[account] */\n  0x00\n    /* \"PramanToken_flattened.sol\":29671:29678  account */\n  dup4\n    /* \"PramanToken_flattened.sol\":29650:29679  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"PramanToken_flattened.sol\":29643:29679  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"PramanToken_flattened.sol\":29550:29686  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"PramanToken_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\ntag_14:\n    /* \"PramanToken_flattened.sol\":13639:13644  uint8 */\n  0x00\n    /* \"PramanToken_flattened.sol\":13663:13665  18 */\n  0x12\n    /* \"PramanToken_flattened.sol\":13656:13665  return 18 */\n  swap1\n  pop\n    /* \"PramanToken_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"PramanToken_flattened.sol\":18264:18472  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"PramanToken_flattened.sol\":18353:18354  0 */\n  0x00\n    /* \"PramanToken_flattened.sol\":18334:18355  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PramanToken_flattened.sol\":18334:18341  account */\n  dup3\n    /* \"PramanToken_flattened.sol\":18334:18355  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"PramanToken_flattened.sol\":18330:18421  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"PramanToken_flattened.sol\":18407:18408  0 */\n  0x00\n    /* \"PramanToken_flattened.sol\":18378:18410  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"PramanToken_flattened.sol\":18330:18421  if (account == address(0)) {... */\ntag_24:\n    /* \"PramanToken_flattened.sol\":18430:18465  _update(address(0), account, value) */\n  tag_27\n    /* \"PramanToken_flattened.sol\":18446:18447  0 */\n  0x00\n    /* \"PramanToken_flattened.sol\":18450:18457  account */\n  dup4\n    /* \"PramanToken_flattened.sol\":18459:18464  value */\n  dup4\n    /* \"PramanToken_flattened.sol\":18430:18437  _update */\n  shl(0x20, tag_28)\n    /* \"PramanToken_flattened.sol\":18430:18465  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"PramanToken_flattened.sol\":18264:18472  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"PramanToken_flattened.sol\":16814:17921  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"PramanToken_flattened.sol\":16919:16920  0 */\n  0x00\n    /* \"PramanToken_flattened.sol\":16903:16921  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PramanToken_flattened.sol\":16903:16907  from */\n  dup4\n    /* \"PramanToken_flattened.sol\":16903:16921  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"PramanToken_flattened.sol\":16899:17439  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"PramanToken_flattened.sol\":17055:17060  value */\n  dup1\n    /* \"PramanToken_flattened.sol\":17039:17051  _totalSupply */\n  0x02\n  0x00\n    /* \"PramanToken_flattened.sol\":17039:17060  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PramanToken_flattened.sol\":16899:17439  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"PramanToken_flattened.sol\":17091:17110  uint256 fromBalance */\n  0x00\n    /* \"PramanToken_flattened.sol\":17113:17122  _balances */\n  0x00\n    /* \"PramanToken_flattened.sol\":17113:17128  _balances[from] */\n  0x00\n    /* \"PramanToken_flattened.sol\":17123:17127  from */\n  dup6\n    /* \"PramanToken_flattened.sol\":17113:17128  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"PramanToken_flattened.sol\":17091:17128  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"PramanToken_flattened.sol\":17160:17165  value */\n  dup2\n    /* \"PramanToken_flattened.sol\":17146:17157  fromBalance */\n  dup2\n    /* \"PramanToken_flattened.sol\":17146:17165  fromBalance < value */\n  lt\n    /* \"PramanToken_flattened.sol\":17142:17257  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"PramanToken_flattened.sol\":17217:17221  from */\n  dup4\n    /* \"PramanToken_flattened.sol\":17223:17234  fromBalance */\n  dup2\n    /* \"PramanToken_flattened.sol\":17236:17241  value */\n  dup4\n    /* \"PramanToken_flattened.sol\":17192:17242  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"PramanToken_flattened.sol\":17142:17257  if (fromBalance < value) {... */\ntag_34:\n    /* \"PramanToken_flattened.sol\":17409:17414  value */\n  dup2\n    /* \"PramanToken_flattened.sol\":17395:17406  fromBalance */\n  dup2\n    /* \"PramanToken_flattened.sol\":17395:17414  fromBalance - value */\n  sub\n    /* \"PramanToken_flattened.sol\":17377:17386  _balances */\n  0x00\n    /* \"PramanToken_flattened.sol\":17377:17392  _balances[from] */\n  0x00\n    /* \"PramanToken_flattened.sol\":17387:17391  from */\n  dup7\n    /* \"PramanToken_flattened.sol\":17377:17392  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"PramanToken_flattened.sol\":17377:17414  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PramanToken_flattened.sol\":17077:17439  {... */\n  pop\n    /* \"PramanToken_flattened.sol\":16899:17439  if (from == address(0)) {... */\ntag_33:\n    /* \"PramanToken_flattened.sol\":17467:17468  0 */\n  0x00\n    /* \"PramanToken_flattened.sol\":17453:17469  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PramanToken_flattened.sol\":17453:17455  to */\n  dup3\n    /* \"PramanToken_flattened.sol\":17453:17469  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"PramanToken_flattened.sol\":17449:17874  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"PramanToken_flattened.sol\":17632:17637  value */\n  dup1\n    /* \"PramanToken_flattened.sol\":17616:17628  _totalSupply */\n  0x02\n  0x00\n    /* \"PramanToken_flattened.sol\":17616:17637  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PramanToken_flattened.sol\":17449:17874  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"PramanToken_flattened.sol\":17844:17849  value */\n  dup1\n    /* \"PramanToken_flattened.sol\":17827:17836  _balances */\n  0x00\n    /* \"PramanToken_flattened.sol\":17827:17840  _balances[to] */\n  0x00\n    /* \"PramanToken_flattened.sol\":17837:17839  to */\n  dup5\n    /* \"PramanToken_flattened.sol\":17827:17840  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"PramanToken_flattened.sol\":17827:17849  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PramanToken_flattened.sol\":17449:17874  if (to == address(0)) {... */\ntag_38:\n    /* \"PramanToken_flattened.sol\":17904:17906  to */\n  dup2\n    /* \"PramanToken_flattened.sol\":17889:17914  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PramanToken_flattened.sol\":17898:17902  from */\n  dup4\n    /* \"PramanToken_flattened.sol\":17889:17914  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"PramanToken_flattened.sol\":17908:17913  value */\n  dup4\n    /* \"PramanToken_flattened.sol\":17889:17914  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"PramanToken_flattened.sol\":16814:17921  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_41:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_42:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_43:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_44:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_75:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_77\n  tag_43\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":714:798   */\ntag_76:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_45:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_46:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_47:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_48:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_82\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_47\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1429:1468   */\n  tag_83\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_47\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_49:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_50:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_51:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_87\n    /* \"#utility.yul\":1818:1852   */\n  tag_88\n    /* \"#utility.yul\":1827:1851   */\n  tag_89\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_52:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_53:\n    /* \"#utility.yul\":2056:2095   */\n  tag_92\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_51\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2117:2208   */\n  tag_93\n    /* \"#utility.yul\":2166:2207   */\n  tag_94\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_48\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_54:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_55:\n    /* \"#utility.yul\":2377:2409   */\n  tag_97\n  tag_54\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2418:2483   */\n  tag_98\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_53\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_56:\n    /* \"#utility.yul\":2555:2675   */\ntag_100:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_103\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_55\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_57:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_106\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_45\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2906:2935   */\n  tag_107\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_46\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_108:\n    /* \"#utility.yul\":3133:3213   */\n  tag_109\n    /* \"#utility.yul\":3189:3211   */\n  tag_110\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_46\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_105:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_58:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_59:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_113\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_58\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_60:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_115\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_59\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_117\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_41\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_119\n  tag_42\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4038:4094   */\ntag_118:\n    /* \"#utility.yul\":4118:4156   */\n  tag_120\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4203:4270   */\n  tag_121\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_57\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_123\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_124:\n    /* \"#utility.yul\":5144:5211   */\n  tag_125\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_60\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_122)\n    /* \"#utility.yul\":4365:4983   */\ntag_123:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_126\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_45\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_127:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_131\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_59\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_130:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_122:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_61:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_62:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_63:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  0x00\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_135:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_139\n  tag_61\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5753:5803   */\ntag_138:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_140:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_141\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_62\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_135)\ntag_137:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_64:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_142)\n    /* \"#utility.yul\":6617:6657   */\ntag_143:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_142)\n    /* \"#utility.yul\":6666:6702   */\ntag_144:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_147\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_145)\n    /* \"#utility.yul\":6805:6832   */\ntag_146:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_142)\n    /* \"#utility.yul\":6841:7032   */\ntag_147:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_149\n  tag_61\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6870:6913   */\ntag_148:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_151\n  tag_61\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6964:7004   */\ntag_150:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_142)\n    /* \"#utility.yul\":6755:7032   */\ntag_145:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_154\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7219:7259   */\ntag_153:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_142)\n    /* \"#utility.yul\":7041:7287   */\ntag_152:\n    /* \"#utility.yul\":7312:7354   */\n  tag_155\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_63\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_157\n  tag_61\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7364:7415   */\ntag_156:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_142:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_65:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_16:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_160\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_49\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_161\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_65\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_162\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_64\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_18:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_164\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_49\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_165\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_49\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_166\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_49\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_168\n  tag_61\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8104:8243   */\ntag_167:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8382   */\ntag_66:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8333:8375   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8326:8331   */\n  dup3\n    /* \"#utility.yul\":8322:8376   */\n  and\n    /* \"#utility.yul\":8311:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8382   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8484   */\ntag_67:\n    /* \"#utility.yul\":8425:8432   */\n  0x00\n    /* \"#utility.yul\":8454:8478   */\n  tag_171\n    /* \"#utility.yul\":8472:8477   */\n  dup3\n    /* \"#utility.yul\":8454:8478   */\n  tag_66\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8443:8478   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8490:8608   */\ntag_68:\n    /* \"#utility.yul\":8577:8601   */\n  tag_173\n    /* \"#utility.yul\":8595:8600   */\n  dup2\n    /* \"#utility.yul\":8577:8601   */\n  tag_67\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8572:8575   */\n  dup3\n    /* \"#utility.yul\":8565:8602   */\n  mstore\n    /* \"#utility.yul\":8490:8608   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8614:8836   */\ntag_26:\n    /* \"#utility.yul\":8707:8711   */\n  0x00\n    /* \"#utility.yul\":8745:8747   */\n  0x20\n    /* \"#utility.yul\":8734:8743   */\n  dup3\n    /* \"#utility.yul\":8730:8748   */\n  add\n    /* \"#utility.yul\":8722:8748   */\n  swap1\n  pop\n    /* \"#utility.yul\":8758:8829   */\n  tag_175\n    /* \"#utility.yul\":8826:8827   */\n  0x00\n    /* \"#utility.yul\":8815:8824   */\n  dup4\n    /* \"#utility.yul\":8811:8828   */\n  add\n    /* \"#utility.yul\":8802:8808   */\n  dup5\n    /* \"#utility.yul\":8758:8829   */\n  tag_68\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8614:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_32:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_177\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_49\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_178\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_49\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_180\n  tag_61\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8990:9026   */\ntag_179:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_69:\n    /* \"#utility.yul\":9126:9150   */\n  tag_182\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_49\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_36:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_184\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_68\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9444:9516   */\n  tag_185\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_69\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9526:9598   */\n  tag_186\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_69\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_40:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_188\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_69\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"PramanToken_flattened.sol\":33804:34265  contract Praman is ERC20, AccessControl {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PramanToken_flattened.sol\":33804:34265  contract Praman is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"PramanToken_flattened.sol\":29261:29463  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":12662:12751  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":14804:14990  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":13705:13802  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":15582:15826  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":30506:30626  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":30922:31058  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"PramanToken_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":32024:32269  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"PramanToken_flattened.sol\":34158:34263  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"PramanToken_flattened.sol\":13835:13951  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":29550:29686  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":12864:12957  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":28916:28965  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":14146:14324  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":33850:33912  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":31338:31476  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"PramanToken_flattened.sol\":14357:14497  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PramanToken_flattened.sol\":29261:29463  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"PramanToken_flattened.sol\":29346:29350  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":29384:29416  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"PramanToken_flattened.sol\":29369:29416  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"PramanToken_flattened.sol\":29369:29380  interfaceId */\n      dup3\n        /* \"PramanToken_flattened.sol\":29369:29416  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"PramanToken_flattened.sol\":29369:29456  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"PramanToken_flattened.sol\":29420:29456  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"PramanToken_flattened.sol\":29444:29455  interfaceId */\n      dup3\n        /* \"PramanToken_flattened.sol\":29420:29443  super.supportsInterface */\n      tag_101\n        /* \"PramanToken_flattened.sol\":29420:29456  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"PramanToken_flattened.sol\":29369:29456  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"PramanToken_flattened.sol\":29362:29456  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":29261:29463  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":12662:12751  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"PramanToken_flattened.sol\":12707:12720  string memory */\n      0x60\n        /* \"PramanToken_flattened.sol\":12739:12744  _name */\n      0x03\n        /* \"PramanToken_flattened.sol\":12732:12744  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":12662:12751  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":14804:14990  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"PramanToken_flattened.sol\":14877:14881  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":14893:14906  address owner */\n      0x00\n        /* \"PramanToken_flattened.sol\":14909:14921  _msgSender() */\n      tag_110\n        /* \"PramanToken_flattened.sol\":14909:14919  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":14909:14921  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"PramanToken_flattened.sol\":14893:14921  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":14931:14962  _approve(owner, spender, value) */\n      tag_112\n        /* \"PramanToken_flattened.sol\":14940:14945  owner */\n      dup2\n        /* \"PramanToken_flattened.sol\":14947:14954  spender */\n      dup6\n        /* \"PramanToken_flattened.sol\":14956:14961  value */\n      dup6\n        /* \"PramanToken_flattened.sol\":14931:14939  _approve */\n      tag_113\n        /* \"PramanToken_flattened.sol\":14931:14962  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"PramanToken_flattened.sol\":14979:14983  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":14972:14983  return true */\n      swap2\n      pop\n      pop\n        /* \"PramanToken_flattened.sol\":14804:14990  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":13705:13802  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"PramanToken_flattened.sol\":13757:13764  uint256 */\n      0x00\n        /* \"PramanToken_flattened.sol\":13783:13795  _totalSupply */\n      sload(0x02)\n        /* \"PramanToken_flattened.sol\":13776:13795  return _totalSupply */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":13705:13802  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":15582:15826  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"PramanToken_flattened.sol\":15669:15673  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":15685:15700  address spender */\n      0x00\n        /* \"PramanToken_flattened.sol\":15703:15715  _msgSender() */\n      tag_116\n        /* \"PramanToken_flattened.sol\":15703:15713  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":15703:15715  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"PramanToken_flattened.sol\":15685:15715  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":15725:15762  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"PramanToken_flattened.sol\":15741:15745  from */\n      dup6\n        /* \"PramanToken_flattened.sol\":15747:15754  spender */\n      dup3\n        /* \"PramanToken_flattened.sol\":15756:15761  value */\n      dup6\n        /* \"PramanToken_flattened.sol\":15725:15740  _spendAllowance */\n      tag_118\n        /* \"PramanToken_flattened.sol\":15725:15762  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"PramanToken_flattened.sol\":15772:15798  _transfer(from, to, value) */\n      tag_119\n        /* \"PramanToken_flattened.sol\":15782:15786  from */\n      dup6\n        /* \"PramanToken_flattened.sol\":15788:15790  to */\n      dup6\n        /* \"PramanToken_flattened.sol\":15792:15797  value */\n      dup6\n        /* \"PramanToken_flattened.sol\":15772:15781  _transfer */\n      tag_120\n        /* \"PramanToken_flattened.sol\":15772:15798  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"PramanToken_flattened.sol\":15815:15819  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":15808:15819  return true */\n      swap2\n      pop\n      pop\n        /* \"PramanToken_flattened.sol\":15582:15826  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":30506:30626  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_51:\n        /* \"PramanToken_flattened.sol\":30571:30578  bytes32 */\n      0x00\n        /* \"PramanToken_flattened.sol\":30597:30603  _roles */\n      0x05\n        /* \"PramanToken_flattened.sol\":30597:30609  _roles[role] */\n      0x00\n        /* \"PramanToken_flattened.sol\":30604:30608  role */\n      dup4\n        /* \"PramanToken_flattened.sol\":30597:30609  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":30597:30619  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"PramanToken_flattened.sol\":30590:30619  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":30506:30626  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":30922:31058  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"PramanToken_flattened.sol\":30996:31014  getRoleAdmin(role) */\n      tag_122\n        /* \"PramanToken_flattened.sol\":31009:31013  role */\n      dup3\n        /* \"PramanToken_flattened.sol\":30996:31008  getRoleAdmin */\n      tag_51\n        /* \"PramanToken_flattened.sol\":30996:31014  getRoleAdmin(role) */\n      jump\t// in\n    tag_122:\n        /* \"PramanToken_flattened.sol\":29193:29209  _checkRole(role) */\n      tag_124\n        /* \"PramanToken_flattened.sol\":29204:29208  role */\n      dup2\n        /* \"PramanToken_flattened.sol\":29193:29203  _checkRole */\n      tag_125\n        /* \"PramanToken_flattened.sol\":29193:29209  _checkRole(role) */\n      jump\t// in\n    tag_124:\n        /* \"PramanToken_flattened.sol\":31026:31051  _grantRole(role, account) */\n      tag_127\n        /* \"PramanToken_flattened.sol\":31037:31041  role */\n      dup4\n        /* \"PramanToken_flattened.sol\":31043:31050  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":31026:31036  _grantRole */\n      tag_128\n        /* \"PramanToken_flattened.sol\":31026:31051  _grantRole(role, account) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"PramanToken_flattened.sol\":30922:31058  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\n    tag_59:\n        /* \"PramanToken_flattened.sol\":13639:13644  uint8 */\n      0x00\n        /* \"PramanToken_flattened.sol\":13663:13665  18 */\n      0x12\n        /* \"PramanToken_flattened.sol\":13656:13665  return 18 */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":13590:13672  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":32024:32269  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_64:\n        /* \"PramanToken_flattened.sol\":32139:32151  _msgSender() */\n      tag_131\n        /* \"PramanToken_flattened.sol\":32139:32149  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":32139:32151  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"PramanToken_flattened.sol\":32117:32151  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":32117:32135  callerConfirmation */\n      dup2\n        /* \"PramanToken_flattened.sol\":32117:32151  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PramanToken_flattened.sol\":32113:32215  if (callerConfirmation != _msgSender()) {... */\n      tag_132\n      jumpi\n        /* \"PramanToken_flattened.sol\":32174:32204  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":32113:32215  if (callerConfirmation != _msgSender()) {... */\n    tag_132:\n        /* \"PramanToken_flattened.sol\":32225:32262  _revokeRole(role, callerConfirmation) */\n      tag_133\n        /* \"PramanToken_flattened.sol\":32237:32241  role */\n      dup3\n        /* \"PramanToken_flattened.sol\":32243:32261  callerConfirmation */\n      dup3\n        /* \"PramanToken_flattened.sol\":32225:32236  _revokeRole */\n      tag_134\n        /* \"PramanToken_flattened.sol\":32225:32262  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"PramanToken_flattened.sol\":32024:32269  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":34158:34263  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_67:\n        /* \"PramanToken_flattened.sol\":33888:33912  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"PramanToken_flattened.sol\":29193:29209  _checkRole(role) */\n      tag_136\n        /* \"PramanToken_flattened.sol\":29204:29208  role */\n      dup2\n        /* \"PramanToken_flattened.sol\":29193:29203  _checkRole */\n      tag_125\n        /* \"PramanToken_flattened.sol\":29193:29209  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"PramanToken_flattened.sol\":34239:34256  _mint(to, amount) */\n      tag_138\n        /* \"PramanToken_flattened.sol\":34245:34247  to */\n      dup4\n        /* \"PramanToken_flattened.sol\":34249:34255  amount */\n      dup4\n        /* \"PramanToken_flattened.sol\":34239:34244  _mint */\n      tag_139\n        /* \"PramanToken_flattened.sol\":34239:34256  _mint(to, amount) */\n      jump\t// in\n    tag_138:\n        /* \"PramanToken_flattened.sol\":34158:34263  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":13835:13951  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"PramanToken_flattened.sol\":13900:13907  uint256 */\n      0x00\n        /* \"PramanToken_flattened.sol\":13926:13935  _balances */\n      0x00\n        /* \"PramanToken_flattened.sol\":13926:13944  _balances[account] */\n      0x00\n        /* \"PramanToken_flattened.sol\":13936:13943  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":13926:13944  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PramanToken_flattened.sol\":13919:13944  return _balances[account] */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":13835:13951  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":29550:29686  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_75:\n        /* \"PramanToken_flattened.sol\":29627:29631  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":29650:29656  _roles */\n      0x05\n        /* \"PramanToken_flattened.sol\":29650:29662  _roles[role] */\n      0x00\n        /* \"PramanToken_flattened.sol\":29657:29661  role */\n      dup5\n        /* \"PramanToken_flattened.sol\":29650:29662  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":29650:29670  _roles[role].hasRole */\n      0x00\n      add\n        /* \"PramanToken_flattened.sol\":29650:29679  _roles[role].hasRole[account] */\n      0x00\n        /* \"PramanToken_flattened.sol\":29671:29678  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":29650:29679  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PramanToken_flattened.sol\":29643:29679  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":29550:29686  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":12864:12957  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"PramanToken_flattened.sol\":12911:12924  string memory */\n      0x60\n        /* \"PramanToken_flattened.sol\":12943:12950  _symbol */\n      0x04\n        /* \"PramanToken_flattened.sol\":12936:12950  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_104\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_104\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":12864:12957  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":28916:28965  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_81:\n        /* \"PramanToken_flattened.sol\":28961:28965  0x00 */\n      0x00\n        /* \"PramanToken_flattened.sol\":28916:28965  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":14146:14324  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"PramanToken_flattened.sol\":14215:14219  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":14231:14244  address owner */\n      0x00\n        /* \"PramanToken_flattened.sol\":14247:14259  _msgSender() */\n      tag_149\n        /* \"PramanToken_flattened.sol\":14247:14257  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":14247:14259  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"PramanToken_flattened.sol\":14231:14259  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":14269:14296  _transfer(owner, to, value) */\n      tag_150\n        /* \"PramanToken_flattened.sol\":14279:14284  owner */\n      dup2\n        /* \"PramanToken_flattened.sol\":14286:14288  to */\n      dup6\n        /* \"PramanToken_flattened.sol\":14290:14295  value */\n      dup6\n        /* \"PramanToken_flattened.sol\":14269:14278  _transfer */\n      tag_120\n        /* \"PramanToken_flattened.sol\":14269:14296  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"PramanToken_flattened.sol\":14313:14317  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":14306:14317  return true */\n      swap2\n      pop\n      pop\n        /* \"PramanToken_flattened.sol\":14146:14324  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":33850:33912  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_88:\n        /* \"PramanToken_flattened.sol\":33888:33912  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"PramanToken_flattened.sol\":33850:33912  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":31338:31476  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"PramanToken_flattened.sol\":31413:31431  getRoleAdmin(role) */\n      tag_151\n        /* \"PramanToken_flattened.sol\":31426:31430  role */\n      dup3\n        /* \"PramanToken_flattened.sol\":31413:31425  getRoleAdmin */\n      tag_51\n        /* \"PramanToken_flattened.sol\":31413:31431  getRoleAdmin(role) */\n      jump\t// in\n    tag_151:\n        /* \"PramanToken_flattened.sol\":29193:29209  _checkRole(role) */\n      tag_153\n        /* \"PramanToken_flattened.sol\":29204:29208  role */\n      dup2\n        /* \"PramanToken_flattened.sol\":29193:29203  _checkRole */\n      tag_125\n        /* \"PramanToken_flattened.sol\":29193:29209  _checkRole(role) */\n      jump\t// in\n    tag_153:\n        /* \"PramanToken_flattened.sol\":31443:31469  _revokeRole(role, account) */\n      tag_155\n        /* \"PramanToken_flattened.sol\":31455:31459  role */\n      dup4\n        /* \"PramanToken_flattened.sol\":31461:31468  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":31443:31454  _revokeRole */\n      tag_134\n        /* \"PramanToken_flattened.sol\":31443:31469  _revokeRole(role, account) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"PramanToken_flattened.sol\":31338:31476  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":14357:14497  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"PramanToken_flattened.sol\":14437:14444  uint256 */\n      0x00\n        /* \"PramanToken_flattened.sol\":14463:14474  _allowances */\n      0x01\n        /* \"PramanToken_flattened.sol\":14463:14481  _allowances[owner] */\n      0x00\n        /* \"PramanToken_flattened.sol\":14475:14480  owner */\n      dup5\n        /* \"PramanToken_flattened.sol\":14463:14481  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":14463:14490  _allowances[owner][spender] */\n      0x00\n        /* \"PramanToken_flattened.sol\":14482:14489  spender */\n      dup4\n        /* \"PramanToken_flattened.sol\":14463:14490  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PramanToken_flattened.sol\":14456:14490  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":14357:14497  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":26706:26852  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"PramanToken_flattened.sol\":26782:26786  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":26820:26845  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"PramanToken_flattened.sol\":26805:26845  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"PramanToken_flattened.sol\":26805:26816  interfaceId */\n      dup3\n        /* \"PramanToken_flattened.sol\":26805:26845  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"PramanToken_flattened.sol\":26798:26845  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":26706:26852  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":4210:4306  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"PramanToken_flattened.sol\":4263:4270  address */\n      0x00\n        /* \"PramanToken_flattened.sol\":4289:4299  msg.sender */\n      caller\n        /* \"PramanToken_flattened.sol\":4282:4299  return msg.sender */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":4210:4306  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":19532:19660  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"PramanToken_flattened.sol\":19616:19653  _approve(owner, spender, value, true) */\n      tag_160\n        /* \"PramanToken_flattened.sol\":19625:19630  owner */\n      dup4\n        /* \"PramanToken_flattened.sol\":19632:19639  spender */\n      dup4\n        /* \"PramanToken_flattened.sol\":19641:19646  value */\n      dup4\n        /* \"PramanToken_flattened.sol\":19648:19652  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":19616:19624  _approve */\n      tag_161\n        /* \"PramanToken_flattened.sol\":19616:19653  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_160:\n        /* \"PramanToken_flattened.sol\":19532:19660  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":21221:21697  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"PramanToken_flattened.sol\":21320:21344  uint256 currentAllowance */\n      0x00\n        /* \"PramanToken_flattened.sol\":21347:21372  allowance(owner, spender) */\n      tag_163\n        /* \"PramanToken_flattened.sol\":21357:21362  owner */\n      dup5\n        /* \"PramanToken_flattened.sol\":21364:21371  spender */\n      dup5\n        /* \"PramanToken_flattened.sol\":21347:21356  allowance */\n      tag_96\n        /* \"PramanToken_flattened.sol\":21347:21372  allowance(owner, spender) */\n      jump\t// in\n    tag_163:\n        /* \"PramanToken_flattened.sol\":21320:21372  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":21405:21422  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"PramanToken_flattened.sol\":21386:21402  currentAllowance */\n      dup2\n        /* \"PramanToken_flattened.sol\":21386:21422  currentAllowance < type(uint256).max */\n      lt\n        /* \"PramanToken_flattened.sol\":21382:21691  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"PramanToken_flattened.sol\":21461:21466  value */\n      dup2\n        /* \"PramanToken_flattened.sol\":21442:21458  currentAllowance */\n      dup2\n        /* \"PramanToken_flattened.sol\":21442:21466  currentAllowance < value */\n      lt\n        /* \"PramanToken_flattened.sol\":21438:21568  if (currentAllowance < value) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"PramanToken_flattened.sol\":21520:21527  spender */\n      dup3\n        /* \"PramanToken_flattened.sol\":21529:21545  currentAllowance */\n      dup2\n        /* \"PramanToken_flattened.sol\":21547:21552  value */\n      dup4\n        /* \"PramanToken_flattened.sol\":21493:21553  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":21438:21568  if (currentAllowance < value) {... */\n    tag_165:\n        /* \"PramanToken_flattened.sol\":21609:21666  _approve(owner, spender, currentAllowance - value, false) */\n      tag_168\n        /* \"PramanToken_flattened.sol\":21618:21623  owner */\n      dup5\n        /* \"PramanToken_flattened.sol\":21625:21632  spender */\n      dup5\n        /* \"PramanToken_flattened.sol\":21653:21658  value */\n      dup5\n        /* \"PramanToken_flattened.sol\":21634:21650  currentAllowance */\n      dup5\n        /* \"PramanToken_flattened.sol\":21634:21658  currentAllowance - value */\n      sub\n        /* \"PramanToken_flattened.sol\":21660:21665  false */\n      0x00\n        /* \"PramanToken_flattened.sol\":21609:21617  _approve */\n      tag_161\n        /* \"PramanToken_flattened.sol\":21609:21666  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_168:\n        /* \"PramanToken_flattened.sol\":21382:21691  if (currentAllowance < type(uint256).max) {... */\n    tag_164:\n        /* \"PramanToken_flattened.sol\":21310:21697  {... */\n      pop\n        /* \"PramanToken_flattened.sol\":21221:21697  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":16199:16499  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"PramanToken_flattened.sol\":16298:16299  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":16282:16300  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":16282:16286  from */\n      dup4\n        /* \"PramanToken_flattened.sol\":16282:16300  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":16278:16364  if (from == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"PramanToken_flattened.sol\":16350:16351  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":16323:16353  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":16278:16364  if (from == address(0)) {... */\n    tag_170:\n        /* \"PramanToken_flattened.sol\":16391:16392  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":16377:16393  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":16377:16379  to */\n      dup3\n        /* \"PramanToken_flattened.sol\":16377:16393  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":16373:16459  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"PramanToken_flattened.sol\":16445:16446  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":16416:16448  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":16373:16459  if (to == address(0)) {... */\n    tag_173:\n        /* \"PramanToken_flattened.sol\":16468:16492  _update(from, to, value) */\n      tag_175\n        /* \"PramanToken_flattened.sol\":16476:16480  from */\n      dup4\n        /* \"PramanToken_flattened.sol\":16482:16484  to */\n      dup4\n        /* \"PramanToken_flattened.sol\":16486:16491  value */\n      dup4\n        /* \"PramanToken_flattened.sol\":16468:16475  _update */\n      tag_176\n        /* \"PramanToken_flattened.sol\":16468:16492  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"PramanToken_flattened.sol\":16199:16499  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":29895:29998  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_125:\n        /* \"PramanToken_flattened.sol\":29961:29991  _checkRole(role, _msgSender()) */\n      tag_178\n        /* \"PramanToken_flattened.sol\":29972:29976  role */\n      dup2\n        /* \"PramanToken_flattened.sol\":29978:29990  _msgSender() */\n      tag_179\n        /* \"PramanToken_flattened.sol\":29978:29988  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":29978:29990  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"PramanToken_flattened.sol\":29961:29971  _checkRole */\n      tag_180\n        /* \"PramanToken_flattened.sol\":29961:29991  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_178:\n        /* \"PramanToken_flattened.sol\":29895:29998  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":32875:33191  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_128:\n        /* \"PramanToken_flattened.sol\":32952:32956  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":32973:32995  hasRole(role, account) */\n      tag_182\n        /* \"PramanToken_flattened.sol\":32981:32985  role */\n      dup4\n        /* \"PramanToken_flattened.sol\":32987:32994  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":32973:32980  hasRole */\n      tag_75\n        /* \"PramanToken_flattened.sol\":32973:32995  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"PramanToken_flattened.sol\":32968:33185  if (!hasRole(role, account)) {... */\n      tag_183\n      jumpi\n        /* \"PramanToken_flattened.sol\":33043:33047  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":33011:33017  _roles */\n      0x05\n        /* \"PramanToken_flattened.sol\":33011:33023  _roles[role] */\n      0x00\n        /* \"PramanToken_flattened.sol\":33018:33022  role */\n      dup6\n        /* \"PramanToken_flattened.sol\":33011:33023  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":33011:33031  _roles[role].hasRole */\n      0x00\n      add\n        /* \"PramanToken_flattened.sol\":33011:33040  _roles[role].hasRole[account] */\n      0x00\n        /* \"PramanToken_flattened.sol\":33032:33039  account */\n      dup5\n        /* \"PramanToken_flattened.sol\":33011:33040  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PramanToken_flattened.sol\":33011:33047  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":33093:33105  _msgSender() */\n      tag_184\n        /* \"PramanToken_flattened.sol\":33093:33103  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":33093:33105  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"PramanToken_flattened.sol\":33066:33106  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":33084:33091  account */\n      dup3\n        /* \"PramanToken_flattened.sol\":33066:33106  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":33078:33082  role */\n      dup5\n        /* \"PramanToken_flattened.sol\":33066:33106  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PramanToken_flattened.sol\":33127:33131  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":33120:33131  return true */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"PramanToken_flattened.sol\":32968:33185  if (!hasRole(role, account)) {... */\n    tag_183:\n        /* \"PramanToken_flattened.sol\":33169:33174  false */\n      0x00\n        /* \"PramanToken_flattened.sol\":33162:33174  return false */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":32875:33191  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":33428:33745  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_134:\n        /* \"PramanToken_flattened.sol\":33506:33510  bool */\n      0x00\n        /* \"PramanToken_flattened.sol\":33526:33548  hasRole(role, account) */\n      tag_187\n        /* \"PramanToken_flattened.sol\":33534:33538  role */\n      dup4\n        /* \"PramanToken_flattened.sol\":33540:33547  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":33526:33533  hasRole */\n      tag_75\n        /* \"PramanToken_flattened.sol\":33526:33548  hasRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"PramanToken_flattened.sol\":33522:33739  if (hasRole(role, account)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"PramanToken_flattened.sol\":33596:33601  false */\n      0x00\n        /* \"PramanToken_flattened.sol\":33564:33570  _roles */\n      0x05\n        /* \"PramanToken_flattened.sol\":33564:33576  _roles[role] */\n      0x00\n        /* \"PramanToken_flattened.sol\":33571:33575  role */\n      dup6\n        /* \"PramanToken_flattened.sol\":33564:33576  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":33564:33584  _roles[role].hasRole */\n      0x00\n      add\n        /* \"PramanToken_flattened.sol\":33564:33593  _roles[role].hasRole[account] */\n      0x00\n        /* \"PramanToken_flattened.sol\":33585:33592  account */\n      dup5\n        /* \"PramanToken_flattened.sol\":33564:33593  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PramanToken_flattened.sol\":33564:33601  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":33647:33659  _msgSender() */\n      tag_189\n        /* \"PramanToken_flattened.sol\":33647:33657  _msgSender */\n      tag_111\n        /* \"PramanToken_flattened.sol\":33647:33659  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"PramanToken_flattened.sol\":33620:33660  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":33638:33645  account */\n      dup3\n        /* \"PramanToken_flattened.sol\":33620:33660  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":33632:33636  role */\n      dup5\n        /* \"PramanToken_flattened.sol\":33620:33660  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PramanToken_flattened.sol\":33681:33685  true */\n      0x01\n        /* \"PramanToken_flattened.sol\":33674:33685  return true */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"PramanToken_flattened.sol\":33522:33739  if (hasRole(role, account)) {... */\n    tag_188:\n        /* \"PramanToken_flattened.sol\":33723:33728  false */\n      0x00\n        /* \"PramanToken_flattened.sol\":33716:33728  return false */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":33428:33745  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_186:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":18264:18472  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n        /* \"PramanToken_flattened.sol\":18353:18354  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":18334:18355  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":18334:18341  account */\n      dup3\n        /* \"PramanToken_flattened.sol\":18334:18355  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":18330:18421  if (account == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"PramanToken_flattened.sol\":18407:18408  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":18378:18410  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":18330:18421  if (account == address(0)) {... */\n    tag_192:\n        /* \"PramanToken_flattened.sol\":18430:18465  _update(address(0), account, value) */\n      tag_194\n        /* \"PramanToken_flattened.sol\":18446:18447  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":18450:18457  account */\n      dup4\n        /* \"PramanToken_flattened.sol\":18459:18464  value */\n      dup4\n        /* \"PramanToken_flattened.sol\":18430:18437  _update */\n      tag_176\n        /* \"PramanToken_flattened.sol\":18430:18465  _update(address(0), account, value) */\n      jump\t// in\n    tag_194:\n        /* \"PramanToken_flattened.sol\":18264:18472  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":20507:20939  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"PramanToken_flattened.sol\":20636:20637  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":20619:20638  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":20619:20624  owner */\n      dup5\n        /* \"PramanToken_flattened.sol\":20619:20638  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":20615:20704  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"PramanToken_flattened.sol\":20690:20691  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":20661:20693  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":20615:20704  if (owner == address(0)) {... */\n    tag_196:\n        /* \"PramanToken_flattened.sol\":20736:20737  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":20717:20738  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":20717:20724  spender */\n      dup4\n        /* \"PramanToken_flattened.sol\":20717:20738  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":20713:20803  if (spender == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"PramanToken_flattened.sol\":20789:20790  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":20761:20792  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":20713:20803  if (spender == address(0)) {... */\n    tag_198:\n        /* \"PramanToken_flattened.sol\":20842:20847  value */\n      dup2\n        /* \"PramanToken_flattened.sol\":20812:20823  _allowances */\n      0x01\n        /* \"PramanToken_flattened.sol\":20812:20830  _allowances[owner] */\n      0x00\n        /* \"PramanToken_flattened.sol\":20824:20829  owner */\n      dup7\n        /* \"PramanToken_flattened.sol\":20812:20830  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":20812:20839  _allowances[owner][spender] */\n      0x00\n        /* \"PramanToken_flattened.sol\":20831:20838  spender */\n      dup6\n        /* \"PramanToken_flattened.sol\":20812:20839  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":20812:20847  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":20861:20870  emitEvent */\n      dup1\n        /* \"PramanToken_flattened.sol\":20857:20933  if (emitEvent) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"PramanToken_flattened.sol\":20907:20914  spender */\n      dup3\n        /* \"PramanToken_flattened.sol\":20891:20922  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":20900:20905  owner */\n      dup5\n        /* \"PramanToken_flattened.sol\":20891:20922  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PramanToken_flattened.sol\":20916:20921  value */\n      dup5\n        /* \"PramanToken_flattened.sol\":20891:20922  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PramanToken_flattened.sol\":20857:20933  if (emitEvent) {... */\n    tag_200:\n        /* \"PramanToken_flattened.sol\":20507:20939  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":16814:17921  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"PramanToken_flattened.sol\":16919:16920  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":16903:16921  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":16903:16907  from */\n      dup4\n        /* \"PramanToken_flattened.sol\":16903:16921  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":16899:17439  if (from == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"PramanToken_flattened.sol\":17055:17060  value */\n      dup1\n        /* \"PramanToken_flattened.sol\":17039:17051  _totalSupply */\n      0x02\n      0x00\n        /* \"PramanToken_flattened.sol\":17039:17060  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":16899:17439  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"PramanToken_flattened.sol\":17091:17110  uint256 fromBalance */\n      0x00\n        /* \"PramanToken_flattened.sol\":17113:17122  _balances */\n      0x00\n        /* \"PramanToken_flattened.sol\":17113:17128  _balances[from] */\n      0x00\n        /* \"PramanToken_flattened.sol\":17123:17127  from */\n      dup6\n        /* \"PramanToken_flattened.sol\":17113:17128  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PramanToken_flattened.sol\":17091:17128  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"PramanToken_flattened.sol\":17160:17165  value */\n      dup2\n        /* \"PramanToken_flattened.sol\":17146:17157  fromBalance */\n      dup2\n        /* \"PramanToken_flattened.sol\":17146:17165  fromBalance < value */\n      lt\n        /* \"PramanToken_flattened.sol\":17142:17257  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"PramanToken_flattened.sol\":17217:17221  from */\n      dup4\n        /* \"PramanToken_flattened.sol\":17223:17234  fromBalance */\n      dup2\n        /* \"PramanToken_flattened.sol\":17236:17241  value */\n      dup4\n        /* \"PramanToken_flattened.sol\":17192:17242  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":17142:17257  if (fromBalance < value) {... */\n    tag_207:\n        /* \"PramanToken_flattened.sol\":17409:17414  value */\n      dup2\n        /* \"PramanToken_flattened.sol\":17395:17406  fromBalance */\n      dup2\n        /* \"PramanToken_flattened.sol\":17395:17414  fromBalance - value */\n      sub\n        /* \"PramanToken_flattened.sol\":17377:17386  _balances */\n      0x00\n        /* \"PramanToken_flattened.sol\":17377:17392  _balances[from] */\n      0x00\n        /* \"PramanToken_flattened.sol\":17387:17391  from */\n      dup7\n        /* \"PramanToken_flattened.sol\":17377:17392  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PramanToken_flattened.sol\":17377:17414  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":17077:17439  {... */\n      pop\n        /* \"PramanToken_flattened.sol\":16899:17439  if (from == address(0)) {... */\n    tag_206:\n        /* \"PramanToken_flattened.sol\":17467:17468  0 */\n      0x00\n        /* \"PramanToken_flattened.sol\":17453:17469  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":17453:17455  to */\n      dup3\n        /* \"PramanToken_flattened.sol\":17453:17469  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PramanToken_flattened.sol\":17449:17874  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"PramanToken_flattened.sol\":17632:17637  value */\n      dup1\n        /* \"PramanToken_flattened.sol\":17616:17628  _totalSupply */\n      0x02\n      0x00\n        /* \"PramanToken_flattened.sol\":17616:17637  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":17449:17874  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"PramanToken_flattened.sol\":17844:17849  value */\n      dup1\n        /* \"PramanToken_flattened.sol\":17827:17836  _balances */\n      0x00\n        /* \"PramanToken_flattened.sol\":17827:17840  _balances[to] */\n      0x00\n        /* \"PramanToken_flattened.sol\":17837:17839  to */\n      dup5\n        /* \"PramanToken_flattened.sol\":17827:17840  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PramanToken_flattened.sol\":17827:17849  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PramanToken_flattened.sol\":17449:17874  if (to == address(0)) {... */\n    tag_210:\n        /* \"PramanToken_flattened.sol\":17904:17906  to */\n      dup2\n        /* \"PramanToken_flattened.sol\":17889:17914  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PramanToken_flattened.sol\":17898:17902  from */\n      dup4\n        /* \"PramanToken_flattened.sol\":17889:17914  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PramanToken_flattened.sol\":17908:17913  value */\n      dup4\n        /* \"PramanToken_flattened.sol\":17889:17914  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PramanToken_flattened.sol\":16814:17921  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PramanToken_flattened.sol\":30128:30325  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_180:\n        /* \"PramanToken_flattened.sol\":30216:30238  hasRole(role, account) */\n      tag_213\n        /* \"PramanToken_flattened.sol\":30224:30228  role */\n      dup3\n        /* \"PramanToken_flattened.sol\":30230:30237  account */\n      dup3\n        /* \"PramanToken_flattened.sol\":30216:30223  hasRole */\n      tag_75\n        /* \"PramanToken_flattened.sol\":30216:30238  hasRole(role, account) */\n      jump\t// in\n    tag_213:\n        /* \"PramanToken_flattened.sol\":30211:30319  if (!hasRole(role, account)) {... */\n      tag_214\n      jumpi\n        /* \"PramanToken_flattened.sol\":30294:30301  account */\n      dup1\n        /* \"PramanToken_flattened.sol\":30303:30307  role */\n      dup3\n        /* \"PramanToken_flattened.sol\":30261:30308  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"PramanToken_flattened.sol\":30211:30319  if (!hasRole(role, account)) {... */\n    tag_214:\n        /* \"PramanToken_flattened.sol\":30128:30325  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_218:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_220:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_221:\n        /* \"#utility.yul\":561:584   */\n      tag_253\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_220\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_254:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_222:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_256\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_259\n      tag_218\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":833:952   */\n    tag_258:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_260\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_223:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_224:\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_223\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_265\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_224\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_225:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_226:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_227:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_228:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_229:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_271\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2222:2293   */\n      tag_272\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_226\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_273\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_227\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2392:2421   */\n      tag_274\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_228\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_276\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_229\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_230:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_231:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_279\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_230\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_232:\n        /* \"#utility.yul\":3060:3084   */\n      tag_281\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_231\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_282:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_233:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_284\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_232\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_234:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_235:\n        /* \"#utility.yul\":3416:3440   */\n      tag_287\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_288:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_236:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_290\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_235\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_36:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_293\n      tag_218\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3709:3828   */\n    tag_292:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_294\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_295\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_236\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_237:\n        /* \"#utility.yul\":4183:4207   */\n      tag_297\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_234\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_42:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_299\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_237\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_45:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_302\n      tag_218\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4558:4677   */\n    tag_301:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_303\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_233\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_304\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_233\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_305\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_236\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_238:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_239:\n        /* \"#utility.yul\":5229:5253   */\n      tag_308\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_238\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_309:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_240:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_311\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_239\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_50:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_314\n      tag_218\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5505:5624   */\n    tag_313:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_315\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_240\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_241:\n        /* \"#utility.yul\":5851:5875   */\n      tag_317\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_238\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_53:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_319\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_241\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_56:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_322\n      tag_218\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6209:6328   */\n    tag_321:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_323\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_240\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_324\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_233\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_242:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_243:\n        /* \"#utility.yul\":6771:6793   */\n      tag_327\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_242\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_61:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_329\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_243\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_70:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_332\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7102:7221   */\n    tag_331:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_333\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_233\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_95:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_336\n      tag_218\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7454:7573   */\n    tag_335:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_337\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_233\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_338\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_233\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_244:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x22\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8347   */\n    tag_104:\n        /* \"#utility.yul\":8071:8077   */\n      0x00\n        /* \"#utility.yul\":8108:8109   */\n      0x02\n        /* \"#utility.yul\":8102:8106   */\n      dup3\n        /* \"#utility.yul\":8098:8110   */\n      div\n        /* \"#utility.yul\":8088:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      0x01\n        /* \"#utility.yul\":8149:8153   */\n      dup3\n        /* \"#utility.yul\":8145:8157   */\n      and\n        /* \"#utility.yul\":8176:8194   */\n      dup1\n        /* \"#utility.yul\":8166:8247   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8232:8236   */\n      0x7f\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8220:8237   */\n      and\n        /* \"#utility.yul\":8210:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8247   */\n    tag_341:\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8297   */\n      lt\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n        /* \"#utility.yul\":8260:8298   */\n      sub\n        /* \"#utility.yul\":8257:8341   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":8313:8331   */\n      tag_343\n      tag_244\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8257:8341   */\n    tag_342:\n        /* \"#utility.yul\":8078:8347   */\n      pop\n        /* \"#utility.yul\":8027:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8471   */\n    tag_245:\n        /* \"#utility.yul\":8440:8464   */\n      tag_345\n        /* \"#utility.yul\":8458:8463   */\n      dup2\n        /* \"#utility.yul\":8440:8464   */\n      tag_231\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8435:8438   */\n      dup3\n        /* \"#utility.yul\":8428:8465   */\n      mstore\n        /* \"#utility.yul\":8353:8471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8477:8919   */\n    tag_167:\n        /* \"#utility.yul\":8626:8630   */\n      0x00\n        /* \"#utility.yul\":8664:8666   */\n      0x60\n        /* \"#utility.yul\":8653:8662   */\n      dup3\n        /* \"#utility.yul\":8649:8667   */\n      add\n        /* \"#utility.yul\":8641:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8677:8748   */\n      tag_347\n        /* \"#utility.yul\":8745:8746   */\n      0x00\n        /* \"#utility.yul\":8734:8743   */\n      dup4\n        /* \"#utility.yul\":8730:8747   */\n      add\n        /* \"#utility.yul\":8721:8727   */\n      dup7\n        /* \"#utility.yul\":8677:8748   */\n      tag_245\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8758:8830   */\n      tag_348\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8815:8824   */\n      dup4\n        /* \"#utility.yul\":8811:8829   */\n      add\n        /* \"#utility.yul\":8802:8808   */\n      dup6\n        /* \"#utility.yul\":8758:8830   */\n      tag_237\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8840:8912   */\n      tag_349\n        /* \"#utility.yul\":8908:8910   */\n      0x40\n        /* \"#utility.yul\":8897:8906   */\n      dup4\n        /* \"#utility.yul\":8893:8911   */\n      add\n        /* \"#utility.yul\":8884:8890   */\n      dup5\n        /* \"#utility.yul\":8840:8912   */\n      tag_237\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8477:8919   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9147   */\n    tag_172:\n        /* \"#utility.yul\":9018:9022   */\n      0x00\n        /* \"#utility.yul\":9056:9058   */\n      0x20\n        /* \"#utility.yul\":9045:9054   */\n      dup3\n        /* \"#utility.yul\":9041:9059   */\n      add\n        /* \"#utility.yul\":9033:9059   */\n      swap1\n      pop\n        /* \"#utility.yul\":9069:9140   */\n      tag_351\n        /* \"#utility.yul\":9137:9138   */\n      0x00\n        /* \"#utility.yul\":9126:9135   */\n      dup4\n        /* \"#utility.yul\":9122:9139   */\n      add\n        /* \"#utility.yul\":9113:9119   */\n      dup5\n        /* \"#utility.yul\":9069:9140   */\n      tag_245\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8925:9147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9153:9333   */\n    tag_246:\n        /* \"#utility.yul\":9201:9278   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9191:9279   */\n      mstore\n        /* \"#utility.yul\":9298:9302   */\n      0x11\n        /* \"#utility.yul\":9295:9296   */\n      0x04\n        /* \"#utility.yul\":9288:9303   */\n      mstore\n        /* \"#utility.yul\":9322:9326   */\n      0x24\n        /* \"#utility.yul\":9319:9320   */\n      0x00\n        /* \"#utility.yul\":9312:9327   */\n      revert\n        /* \"#utility.yul\":9339:9530   */\n    tag_205:\n        /* \"#utility.yul\":9379:9382   */\n      0x00\n        /* \"#utility.yul\":9398:9418   */\n      tag_354\n        /* \"#utility.yul\":9416:9417   */\n      dup3\n        /* \"#utility.yul\":9398:9418   */\n      tag_234\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9393:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9432:9452   */\n      tag_355\n        /* \"#utility.yul\":9450:9451   */\n      dup4\n        /* \"#utility.yul\":9432:9452   */\n      tag_234\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9427:9452   */\n      swap3\n      pop\n        /* \"#utility.yul\":9475:9476   */\n      dup3\n        /* \"#utility.yul\":9472:9473   */\n      dup3\n        /* \"#utility.yul\":9468:9477   */\n      add\n        /* \"#utility.yul\":9461:9477   */\n      swap1\n      pop\n        /* \"#utility.yul\":9496:9499   */\n      dup1\n        /* \"#utility.yul\":9493:9494   */\n      dup3\n        /* \"#utility.yul\":9490:9500   */\n      gt\n        /* \"#utility.yul\":9487:9523   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":9503:9521   */\n      tag_357\n      tag_246\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9487:9523   */\n    tag_356:\n        /* \"#utility.yul\":9339:9530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9536:9868   */\n    tag_216:\n        /* \"#utility.yul\":9657:9661   */\n      0x00\n        /* \"#utility.yul\":9695:9697   */\n      0x40\n        /* \"#utility.yul\":9684:9693   */\n      dup3\n        /* \"#utility.yul\":9680:9698   */\n      add\n        /* \"#utility.yul\":9672:9698   */\n      swap1\n      pop\n        /* \"#utility.yul\":9708:9779   */\n      tag_359\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9765:9774   */\n      dup4\n        /* \"#utility.yul\":9761:9778   */\n      add\n        /* \"#utility.yul\":9752:9758   */\n      dup6\n        /* \"#utility.yul\":9708:9779   */\n      tag_245\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9789:9861   */\n      tag_360\n        /* \"#utility.yul\":9857:9859   */\n      0x20\n        /* \"#utility.yul\":9846:9855   */\n      dup4\n        /* \"#utility.yul\":9842:9860   */\n      add\n        /* \"#utility.yul\":9833:9839   */\n      dup5\n        /* \"#utility.yul\":9789:9861   */\n      tag_241\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9536:9868   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9e91838cf2998dfcca9ac829be34be0ae3d93b7fcaab7f0d889206f4c1ba4f164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1215": {
									"entryPoint": null,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 394,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 527,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 386,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_959": {
									"entryPoint": 286,
									"id": 959,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:1",
										"nodeType": "YulBlock",
										"src": "0:9836:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5262:152:1",
													"nodeType": "YulBlock",
													"src": "5262:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:1"
																},
																"nativeSrc": "5272:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:1"
															},
															"nativeSrc": "5272:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:1"
																},
																"nativeSrc": "5369:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:1"
															},
															"nativeSrc": "5369:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:1"
																},
																"nativeSrc": "5393:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:1"
															},
															"nativeSrc": "5393:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:1"
											},
											{
												"body": {
													"nativeSrc": "5471:51:1",
													"nodeType": "YulBlock",
													"src": "5471:51:1",
													"statements": [
														{
															"nativeSrc": "5481:34:1",
															"nodeType": "YulAssignment",
															"src": "5481:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:1"
																},
																"nativeSrc": "5502:13:1",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:1",
														"nodeType": "YulTypedName",
														"src": "5452:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:1",
														"nodeType": "YulTypedName",
														"src": "5462:8:1",
														"type": ""
													}
												],
												"src": "5420:102:1"
											},
											{
												"body": {
													"nativeSrc": "5601:775:1",
													"nodeType": "YulBlock",
													"src": "5601:775:1",
													"statements": [
														{
															"nativeSrc": "5611:15:1",
															"nodeType": "YulAssignment",
															"src": "5611:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:1",
																"nodeType": "YulIdentifier",
																"src": "5620:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:1"
																}
															]
														},
														{
															"nativeSrc": "5635:14:1",
															"nodeType": "YulAssignment",
															"src": "5635:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:1",
																"nodeType": "YulIdentifier",
																"src": "5644:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:1",
																"nodeType": "YulBlock",
																"src": "5693:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:1",
																			"nodeType": "YulBlock",
																			"src": "5781:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:1"
																						},
																						"nativeSrc": "5783:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:1"
																					},
																					"nativeSrc": "5783:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:1"
																					},
																					"nativeSrc": "5765:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:1"
																			},
																			"nativeSrc": "5756:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:1"
																		},
																		"nativeSrc": "5753:50:1",
																		"nodeType": "YulIf",
																		"src": "5753:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:1",
																			"nodeType": "YulBlock",
																			"src": "5848:419:1",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:1",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:1"
																						},
																						"nativeSrc": "6237:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:1"
																			},
																			"nativeSrc": "5819:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:1"
																		},
																		"nativeSrc": "5816:451:1",
																		"nodeType": "YulIf",
																		"src": "5816:451:1"
																	},
																	{
																		"nativeSrc": "6280:23:1",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:1"
																			},
																			"nativeSrc": "6288:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:1",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:1"
																			},
																			"nativeSrc": "6328:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:1"
																},
																"nativeSrc": "5666:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:1"
															},
															"nativeSrc": "5658:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:1",
																"nodeType": "YulBlock",
																"src": "5682:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:1",
																"nodeType": "YulBlock",
																"src": "5662:3:1",
																"statements": []
															},
															"src": "5658:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:1",
														"nodeType": "YulTypedName",
														"src": "5556:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:1",
														"nodeType": "YulTypedName",
														"src": "5564:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:1",
														"nodeType": "YulTypedName",
														"src": "5571:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:1",
														"nodeType": "YulTypedName",
														"src": "5581:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:1",
														"nodeType": "YulTypedName",
														"src": "5589:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:1",
														"nodeType": "YulTypedName",
														"src": "5596:4:1",
														"type": ""
													}
												],
												"src": "5528:848:1"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:1",
													"nodeType": "YulBlock",
													"src": "6442:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:1",
																"nodeType": "YulBlock",
																"src": "6637:20:1",
																"statements": [
																	{
																		"nativeSrc": "6639:10:1",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:1",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:1",
																		"nodeType": "YulLeave",
																		"src": "6650:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:1"
																},
																"nativeSrc": "6620:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:1"
															},
															"nativeSrc": "6617:40:1",
															"nodeType": "YulIf",
															"src": "6617:40:1"
														},
														{
															"body": {
																"nativeSrc": "6682:20:1",
																"nodeType": "YulBlock",
																"src": "6682:20:1",
																"statements": [
																	{
																		"nativeSrc": "6684:10:1",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:1",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:1",
																		"nodeType": "YulLeave",
																		"src": "6695:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:1"
																},
																"nativeSrc": "6669:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:1"
															},
															"nativeSrc": "6666:36:1",
															"nodeType": "YulIf",
															"src": "6666:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:1",
																		"nodeType": "YulBlock",
																		"src": "6812:20:1",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:1",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:1",
																				"nodeType": "YulLeave",
																				"src": "6825:5:1"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:1",
																	"nodeType": "YulCase",
																	"src": "6805:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:1",
																		"nodeType": "YulBlock",
																		"src": "6856:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:1",
																					"nodeType": "YulBlock",
																					"src": "6891:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:1"
																								},
																								"nativeSrc": "6893:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:1"
																							},
																							"nativeSrc": "6893:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:1",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:1"
																					},
																					"nativeSrc": "6873:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:1"
																				},
																				"nativeSrc": "6870:43:1",
																				"nodeType": "YulIf",
																				"src": "6870:43:1"
																			},
																			{
																				"nativeSrc": "6926:25:1",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:1",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:1"
																					},
																					"nativeSrc": "6935:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:1",
																					"nodeType": "YulBlock",
																					"src": "6982:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:1"
																								},
																								"nativeSrc": "6984:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:1"
																							},
																							"nativeSrc": "6984:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:1"
																					},
																					"nativeSrc": "6967:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:1"
																				},
																				"nativeSrc": "6964:40:1",
																				"nodeType": "YulIf",
																				"src": "6964:40:1"
																			},
																			{
																				"nativeSrc": "7017:5:1",
																				"nodeType": "YulLeave",
																				"src": "7017:5:1"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:1",
																	"nodeType": "YulCase",
																	"src": "6841:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:1",
																"nodeType": "YulIdentifier",
																"src": "6762:4:1"
															},
															"nativeSrc": "6755:277:1",
															"nodeType": "YulSwitch",
															"src": "6755:277:1"
														},
														{
															"body": {
																"nativeSrc": "7164:123:1",
																"nodeType": "YulBlock",
																"src": "7164:123:1",
																"statements": [
																	{
																		"nativeSrc": "7178:28:1",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:1"
																			},
																			"nativeSrc": "7187:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:1",
																			"nodeType": "YulBlock",
																			"src": "7237:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:1"
																						},
																						"nativeSrc": "7239:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:1"
																					},
																					"nativeSrc": "7239:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:1"
																			},
																			"nativeSrc": "7222:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:1"
																		},
																		"nativeSrc": "7219:40:1",
																		"nodeType": "YulIf",
																		"src": "7219:40:1"
																	},
																	{
																		"nativeSrc": "7272:5:1",
																		"nodeType": "YulLeave",
																		"src": "7272:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:1"
																				},
																				"nativeSrc": "7064:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:1"
																				},
																				"nativeSrc": "7078:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:1"
																		},
																		"nativeSrc": "7060:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:1",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:1"
																				},
																				"nativeSrc": "7113:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:1"
																				},
																				"nativeSrc": "7128:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:1"
																		},
																		"nativeSrc": "7109:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:1"
																},
																"nativeSrc": "7044:111:1",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:1"
															},
															"nativeSrc": "7041:246:1",
															"nodeType": "YulIf",
															"src": "7041:246:1"
														},
														{
															"nativeSrc": "7297:57:1",
															"nodeType": "YulAssignment",
															"src": "7297:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:1"
																},
																"nativeSrc": "7312:42:1",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:1",
																"nodeType": "YulBlock",
																"src": "7393:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:1"
																			},
																			"nativeSrc": "7395:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:1"
																		},
																		"nativeSrc": "7395:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:1"
																		},
																		"nativeSrc": "7377:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:1"
																},
																"nativeSrc": "7367:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:1"
															},
															"nativeSrc": "7364:51:1",
															"nodeType": "YulIf",
															"src": "7364:51:1"
														},
														{
															"nativeSrc": "7424:25:1",
															"nodeType": "YulAssignment",
															"src": "7424:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:1"
																},
																"nativeSrc": "7433:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:1",
														"nodeType": "YulTypedName",
														"src": "6412:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:1",
														"nodeType": "YulTypedName",
														"src": "6418:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:1",
														"nodeType": "YulTypedName",
														"src": "6428:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:1",
														"nodeType": "YulTypedName",
														"src": "6436:5:1",
														"type": ""
													}
												],
												"src": "6382:1073:1"
											},
											{
												"body": {
													"nativeSrc": "7504:43:1",
													"nodeType": "YulBlock",
													"src": "7504:43:1",
													"statements": [
														{
															"nativeSrc": "7514:27:1",
															"nodeType": "YulAssignment",
															"src": "7514:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:1"
																},
																"nativeSrc": "7525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7525:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7514:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7461:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7486:5:1",
														"nodeType": "YulTypedName",
														"src": "7486:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7496:7:1",
														"nodeType": "YulTypedName",
														"src": "7496:7:1",
														"type": ""
													}
												],
												"src": "7461:86:1"
											},
											{
												"body": {
													"nativeSrc": "7617:217:1",
													"nodeType": "YulBlock",
													"src": "7617:217:1",
													"statements": [
														{
															"nativeSrc": "7627:31:1",
															"nodeType": "YulAssignment",
															"src": "7627:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7653:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7635:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:1"
																},
																"nativeSrc": "7635:23:1",
																"nodeType": "YulFunctionCall",
																"src": "7635:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7627:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:1"
																}
															]
														},
														{
															"nativeSrc": "7667:37:1",
															"nodeType": "YulAssignment",
															"src": "7667:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7695:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7679:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:1"
																},
																"nativeSrc": "7679:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7679:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:1"
																}
															]
														},
														{
															"nativeSrc": "7714:113:1",
															"nodeType": "YulAssignment",
															"src": "7714:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7744:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7750:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:66:1",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7723:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:1"
																},
																"nativeSrc": "7723:104:1",
																"nodeType": "YulFunctionCall",
																"src": "7723:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7714:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7553:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7592:4:1",
														"nodeType": "YulTypedName",
														"src": "7592:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7598:8:1",
														"nodeType": "YulTypedName",
														"src": "7598:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7611:5:1",
														"nodeType": "YulTypedName",
														"src": "7611:5:1",
														"type": ""
													}
												],
												"src": "7553:281:1"
											},
											{
												"body": {
													"nativeSrc": "7888:362:1",
													"nodeType": "YulBlock",
													"src": "7888:362:1",
													"statements": [
														{
															"nativeSrc": "7898:25:1",
															"nodeType": "YulAssignment",
															"src": "7898:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7921:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:1"
																},
																"nativeSrc": "7903:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7898:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:1"
																}
															]
														},
														{
															"nativeSrc": "7932:25:1",
															"nodeType": "YulAssignment",
															"src": "7932:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7955:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7937:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:1"
																},
																"nativeSrc": "7937:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7932:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:1"
																}
															]
														},
														{
															"nativeSrc": "7966:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:1"
																},
																"nativeSrc": "7985:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7970:11:1",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8003:41:1",
															"nodeType": "YulAssignment",
															"src": "8003:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8032:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8014:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:1"
																},
																"nativeSrc": "8014:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8003:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:1",
																"nodeType": "YulBlock",
																"src": "8221:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:1"
																			},
																			"nativeSrc": "8223:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:1"
																		},
																		"nativeSrc": "8223:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8154:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8147:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:1"
																				},
																				"nativeSrc": "8147:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8177:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8184:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8193:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8180:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:1"
																						},
																						"nativeSrc": "8180:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8174:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:1"
																				},
																				"nativeSrc": "8174:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8127:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:1"
																		},
																		"nativeSrc": "8127:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8107:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:1"
																},
																"nativeSrc": "8107:113:1",
																"nodeType": "YulFunctionCall",
																"src": "8107:113:1"
															},
															"nativeSrc": "8104:139:1",
															"nodeType": "YulIf",
															"src": "8104:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7840:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7871:1:1",
														"nodeType": "YulTypedName",
														"src": "7871:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7874:1:1",
														"nodeType": "YulTypedName",
														"src": "7874:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7880:7:1",
														"nodeType": "YulTypedName",
														"src": "7880:7:1",
														"type": ""
													}
												],
												"src": "7840:410:1"
											},
											{
												"body": {
													"nativeSrc": "8301:81:1",
													"nodeType": "YulBlock",
													"src": "8301:81:1",
													"statements": [
														{
															"nativeSrc": "8311:65:1",
															"nodeType": "YulAssignment",
															"src": "8311:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8326:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8326:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:42:1",
																		"nodeType": "YulLiteral",
																		"src": "8333:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:1"
																},
																"nativeSrc": "8322:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8322:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8256:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:1",
														"nodeType": "YulTypedName",
														"src": "8283:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:1",
														"nodeType": "YulTypedName",
														"src": "8293:7:1",
														"type": ""
													}
												],
												"src": "8256:126:1"
											},
											{
												"body": {
													"nativeSrc": "8433:51:1",
													"nodeType": "YulBlock",
													"src": "8433:51:1",
													"statements": [
														{
															"nativeSrc": "8443:35:1",
															"nodeType": "YulAssignment",
															"src": "8443:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8472:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8472:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8454:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8454:17:1"
																},
																"nativeSrc": "8454:24:1",
																"nodeType": "YulFunctionCall",
																"src": "8454:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8443:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8443:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8388:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8415:5:1",
														"nodeType": "YulTypedName",
														"src": "8415:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8425:7:1",
														"nodeType": "YulTypedName",
														"src": "8425:7:1",
														"type": ""
													}
												],
												"src": "8388:96:1"
											},
											{
												"body": {
													"nativeSrc": "8555:53:1",
													"nodeType": "YulBlock",
													"src": "8555:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8595:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8595:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8577:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8577:17:1"
																		},
																		"nativeSrc": "8577:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:1"
																},
																"nativeSrc": "8565:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8565:37:1"
															},
															"nativeSrc": "8565:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8565:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8490:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:1",
														"nodeType": "YulTypedName",
														"src": "8543:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8550:3:1",
														"nodeType": "YulTypedName",
														"src": "8550:3:1",
														"type": ""
													}
												],
												"src": "8490:118:1"
											},
											{
												"body": {
													"nativeSrc": "8712:124:1",
													"nodeType": "YulBlock",
													"src": "8712:124:1",
													"statements": [
														{
															"nativeSrc": "8722:26:1",
															"nodeType": "YulAssignment",
															"src": "8722:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8745:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8730:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:1"
																},
																"nativeSrc": "8730:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8730:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8722:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8722:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8802:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8826:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:1"
																		},
																		"nativeSrc": "8811:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8758:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:1"
																},
																"nativeSrc": "8758:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8758:71:1"
															},
															"nativeSrc": "8758:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8758:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8614:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:1",
														"nodeType": "YulTypedName",
														"src": "8684:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8696:6:1",
														"nodeType": "YulTypedName",
														"src": "8696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8707:4:1",
														"nodeType": "YulTypedName",
														"src": "8707:4:1",
														"type": ""
													}
												],
												"src": "8614:222:1"
											},
											{
												"body": {
													"nativeSrc": "8886:147:1",
													"nodeType": "YulBlock",
													"src": "8886:147:1",
													"statements": [
														{
															"nativeSrc": "8896:25:1",
															"nodeType": "YulAssignment",
															"src": "8896:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:1"
																},
																"nativeSrc": "8901:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:1"
																}
															]
														},
														{
															"nativeSrc": "8930:25:1",
															"nodeType": "YulAssignment",
															"src": "8930:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:1"
																},
																"nativeSrc": "8935:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:1"
																}
															]
														},
														{
															"nativeSrc": "8964:16:1",
															"nodeType": "YulAssignment",
															"src": "8964:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:1"
																},
																"nativeSrc": "8971:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:1",
																"nodeType": "YulBlock",
																"src": "9004:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:1"
																			},
																			"nativeSrc": "9006:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:1"
																		},
																		"nativeSrc": "9006:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:1"
																},
																"nativeSrc": "8993:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:1"
															},
															"nativeSrc": "8990:36:1",
															"nodeType": "YulIf",
															"src": "8990:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:1",
														"nodeType": "YulTypedName",
														"src": "8873:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:1",
														"nodeType": "YulTypedName",
														"src": "8876:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:1",
														"nodeType": "YulTypedName",
														"src": "8882:3:1",
														"type": ""
													}
												],
												"src": "8842:191:1"
											},
											{
												"body": {
													"nativeSrc": "9104:53:1",
													"nodeType": "YulBlock",
													"src": "9104:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:1"
																		},
																		"nativeSrc": "9126:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:1"
																},
																"nativeSrc": "9114:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:1"
															},
															"nativeSrc": "9114:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:1",
														"nodeType": "YulTypedName",
														"src": "9092:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:1",
														"nodeType": "YulTypedName",
														"src": "9099:3:1",
														"type": ""
													}
												],
												"src": "9039:118:1"
											},
											{
												"body": {
													"nativeSrc": "9317:288:1",
													"nodeType": "YulBlock",
													"src": "9317:288:1",
													"statements": [
														{
															"nativeSrc": "9327:26:1",
															"nodeType": "YulAssignment",
															"src": "9327:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:1"
																},
																"nativeSrc": "9335:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:1"
																		},
																		"nativeSrc": "9416:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:1"
																},
																"nativeSrc": "9363:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:1"
															},
															"nativeSrc": "9363:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:1"
																		},
																		"nativeSrc": "9497:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:1"
																},
																"nativeSrc": "9444:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:1"
															},
															"nativeSrc": "9444:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:1"
																		},
																		"nativeSrc": "9579:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:1"
																},
																"nativeSrc": "9526:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:1"
															},
															"nativeSrc": "9526:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:1",
														"nodeType": "YulTypedName",
														"src": "9273:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:1",
														"nodeType": "YulTypedName",
														"src": "9285:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:1",
														"nodeType": "YulTypedName",
														"src": "9293:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:1",
														"nodeType": "YulTypedName",
														"src": "9301:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:1",
														"nodeType": "YulTypedName",
														"src": "9312:4:1",
														"type": ""
													}
												],
												"src": "9163:442:1"
											},
											{
												"body": {
													"nativeSrc": "9709:124:1",
													"nodeType": "YulBlock",
													"src": "9709:124:1",
													"statements": [
														{
															"nativeSrc": "9719:26:1",
															"nodeType": "YulAssignment",
															"src": "9719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:1"
																},
																"nativeSrc": "9727:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:1"
																		},
																		"nativeSrc": "9808:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:1"
																},
																"nativeSrc": "9755:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:1"
															},
															"nativeSrc": "9755:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:1",
														"nodeType": "YulTypedName",
														"src": "9681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:1",
														"nodeType": "YulTypedName",
														"src": "9693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:1",
														"nodeType": "YulTypedName",
														"src": "9704:4:1",
														"type": ""
													}
												],
												"src": "9611:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280600681526020017f5072616d616e00000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f50524d0000000000000000000000000000000000000000000000000000000000815250816003908161008b9190610665565b50806004908161009b9190610665565b5050506100b05f5f1b3361011e60201b60201c565b506100e17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361011e60201b60201c565b50610119336100f461018260201b60201c565b600a610100919061089c565b620f424061010e91906108e6565b61018a60201b60201c565b610a0f565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101fa575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101f19190610966565b60405180910390fd5b61020b5f838361020f60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361025f578060025f828254610253919061097f565b9250508190555061032d565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156102e8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016102df939291906109c1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610374578060025f82825403925050819055506103be565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161041b91906109f6565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104a357607f821691505b6020821081036104b6576104b561045f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104dd565b61052286836104dd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61056661056161055c8461053a565b610543565b61053a565b9050919050565b5f819050919050565b61057f8361054c565b61059361058b8261056d565b8484546104e9565b825550505050565b5f5f905090565b6105aa61059b565b6105b5818484610576565b505050565b5b818110156105d8576105cd5f826105a2565b6001810190506105bb565b5050565b601f82111561061d576105ee816104bc565b6105f7846104ce565b81016020851015610606578190505b61061a610612856104ce565b8301826105ba565b50505b505050565b5f82821c905092915050565b5f61063d5f1984600802610622565b1980831691505092915050565b5f610655838361062e565b9150826002028217905092915050565b61066e82610428565b67ffffffffffffffff81111561068757610686610432565b5b610691825461048c565b61069c8282856105dc565b5f60209050601f8311600181146106cd575f84156106bb578287015190505b6106c5858261064a565b86555061072c565b601f1984166106db866104bc565b5f5b82811015610702578489015182556001820191506020850194506020810190506106dd565b8683101561071f578489015161071b601f89168261062e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156107b65780860481111561079257610791610734565b5b60018516156107a15780820291505b80810290506107af85610761565b9450610776565b94509492505050565b5f826107ce5760019050610889565b816107db575f9050610889565b81600181146107f157600281146107fb5761082a565b6001915050610889565b60ff84111561080d5761080c610734565b5b8360020a91508482111561082457610823610734565b5b50610889565b5060208310610133831016604e8410600b841016171561085f5782820a90508381111561085a57610859610734565b5b610889565b61086c848484600161076d565b9250905081840481111561088357610882610734565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6108a68261053a565b91506108b183610890565b92506108de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107bf565b905092915050565b5f6108f08261053a565b91506108fb8361053a565b92508282026109098161053a565b915082820484148315176109205761091f610734565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61095082610927565b9050919050565b61096081610946565b82525050565b5f6020820190506109795f830184610957565b92915050565b5f6109898261053a565b91506109948361053a565b92508282019050808211156109ac576109ab610734565b5b92915050565b6109bb8161053a565b82525050565b5f6060820190506109d45f830186610957565b6109e160208301856109b2565b6109ee60408301846109b2565b949350505050565b5f602082019050610a095f8301846109b2565b92915050565b61164980610a1c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f5ffd5b610132600480360381019061012d9190611140565b6103bc565b60405161013f9190611185565b60405180910390f35b610150610435565b60405161015d919061120e565b60405180910390f35b610180600480360381019061017b91906112bb565b6104c5565b60405161018d9190611185565b60405180910390f35b61019e6104e7565b6040516101ab9190611308565b60405180910390f35b6101ce60048036038101906101c99190611321565b6104f0565b6040516101db9190611185565b60405180910390f35b6101fe60048036038101906101f991906113a4565b61051e565b60405161020b91906113de565b60405180910390f35b61022e600480360381019061022991906113f7565b61053b565b005b61023861055d565b6040516102459190611450565b60405180910390f35b610268600480360381019061026391906113f7565b610565565b005b610284600480360381019061027f91906112bb565b6105e0565b005b6102a0600480360381019061029b9190611469565b610619565b6040516102ad9190611308565b60405180910390f35b6102d060048036038101906102cb91906113f7565b61065e565b6040516102dd9190611185565b60405180910390f35b6102ee6106c2565b6040516102fb919061120e565b60405180910390f35b61030c610752565b60405161031991906113de565b60405180910390f35b61033c600480360381019061033791906112bb565b610758565b6040516103499190611185565b60405180910390f35b61035a61077a565b60405161036791906113de565b60405180910390f35b61038a600480360381019061038591906113f7565b61079e565b005b6103a660048036038101906103a19190611494565b6107c0565b6040516103b39190611308565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610842565b5b9050919050565b606060038054610444906114ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114ff565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f5f6104cf6108ab565b90506104dc8185856108b2565b600191505092915050565b5f600254905090565b5f5f6104fa6108ab565b90506105078582856108c4565b610512858585610957565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a47565b6105578383610a5b565b50505050565b5f6012905090565b61056d6108ab565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b45565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060a81610a47565b6106148383610c2f565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d1906114ff565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd906114ff565b80156107485780601f1061071f57610100808354040283529160200191610748565b820191905f5260205f20905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6107626108ab565b905061076f818585610957565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a78261051e565b6107b081610a47565b6107ba8383610b45565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108bf8383836001610cae565b505050565b5f6108cf84846107c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109515781811015610942578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109399392919061153e565b60405180910390fd5b61095084848484035f610cae565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109be9190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a37575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2e9190611573565b60405180910390fd5b610a42838383610e7d565b505050565b610a5881610a536108ab565b611096565b50565b5f610a66838361065e565b610b3b57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad86108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3f565b5f90505b92915050565b5f610b50838361065e565b15610c25575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc26108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c29565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c969190611573565b60405180910390fd5b610caa5f8383610e7d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d159190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d859190611573565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e77578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6e9190611308565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecd578060025f828254610ec191906115b9565b92505081905550610f9b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f56578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4d9392919061153e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe2578060025f828254039250508190555061102c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110899190611308565b60405180910390a3505050565b6110a0828261065e565b6110e35780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110da9291906115ec565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111f816110eb565b8114611129575f5ffd5b50565b5f8135905061113a81611116565b92915050565b5f60208284031215611155576111546110e7565b5b5f6111628482850161112c565b91505092915050565b5f8115159050919050565b61117f8161116b565b82525050565b5f6020820190506111985f830184611176565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111e08261119e565b6111ea81856111a8565b93506111fa8185602086016111b8565b611203816111c6565b840191505092915050565b5f6020820190508181035f83015261122681846111d6565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112578261122e565b9050919050565b6112678161124d565b8114611271575f5ffd5b50565b5f813590506112828161125e565b92915050565b5f819050919050565b61129a81611288565b81146112a4575f5ffd5b50565b5f813590506112b581611291565b92915050565b5f5f604083850312156112d1576112d06110e7565b5b5f6112de85828601611274565b92505060206112ef858286016112a7565b9150509250929050565b61130281611288565b82525050565b5f60208201905061131b5f8301846112f9565b92915050565b5f5f5f60608486031215611338576113376110e7565b5b5f61134586828701611274565b935050602061135686828701611274565b9250506040611367868287016112a7565b9150509250925092565b5f819050919050565b61138381611371565b811461138d575f5ffd5b50565b5f8135905061139e8161137a565b92915050565b5f602082840312156113b9576113b86110e7565b5b5f6113c684828501611390565b91505092915050565b6113d881611371565b82525050565b5f6020820190506113f15f8301846113cf565b92915050565b5f5f6040838503121561140d5761140c6110e7565b5b5f61141a85828601611390565b925050602061142b85828601611274565b9150509250929050565b5f60ff82169050919050565b61144a81611435565b82525050565b5f6020820190506114635f830184611441565b92915050565b5f6020828403121561147e5761147d6110e7565b5b5f61148b84828501611274565b91505092915050565b5f5f604083850312156114aa576114a96110e7565b5b5f6114b785828601611274565b92505060206114c885828601611274565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151657607f821691505b602082108103611529576115286114d2565b5b50919050565b6115388161124d565b82525050565b5f6060820190506115515f83018661152f565b61155e60208301856112f9565b61156b60408301846112f9565b949350505050565b5f6020820190506115865f83018461152f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c382611288565b91506115ce83611288565b92508282019050808211156115e6576115e561158c565b5b92915050565b5f6040820190506115ff5f83018561152f565b61160c60208301846113cf565b939250505056fea2646970667358221220c9e91838cf2998dfcca9ac829be34be0ae3d93b7fcaab7f0d889206f4c1ba4f164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5072616D616E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50524D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST POP POP POP PUSH2 0xB0 PUSH0 PUSH0 SHL CALLER PUSH2 0x11E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x11E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x119 CALLER PUSH2 0xF4 PUSH2 0x182 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x18A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B PUSH0 DUP4 DUP4 PUSH2 0x20F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x97F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x32D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x374 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3BE JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4B6 JUMPI PUSH2 0x4B5 PUSH2 0x45F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x518 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x522 DUP7 DUP4 PUSH2 0x4DD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x566 PUSH2 0x561 PUSH2 0x55C DUP5 PUSH2 0x53A JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F DUP4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x593 PUSH2 0x58B DUP3 PUSH2 0x56D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5AA PUSH2 0x59B JUMP JUMPDEST PUSH2 0x5B5 DUP2 DUP5 DUP5 PUSH2 0x576 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5CD PUSH0 DUP3 PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x5EE DUP2 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x5F7 DUP5 PUSH2 0x4CE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x606 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x61A PUSH2 0x612 DUP6 PUSH2 0x4CE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5BA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x622 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x655 DUP4 DUP4 PUSH2 0x62E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E DUP3 PUSH2 0x428 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x687 JUMPI PUSH2 0x686 PUSH2 0x432 JUMP JUMPDEST JUMPDEST PUSH2 0x691 DUP3 SLOAD PUSH2 0x48C JUMP JUMPDEST PUSH2 0x69C DUP3 DUP3 DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6CD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6BB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6C5 DUP6 DUP3 PUSH2 0x64A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x72C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6DB DUP7 PUSH2 0x4BC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x702 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x71F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x71B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x62E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x7B6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x792 JUMPI PUSH2 0x791 PUSH2 0x734 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x7A1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x7AF DUP6 PUSH2 0x761 JUMP JUMPDEST SWAP5 POP PUSH2 0x776 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7CE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x889 JUMP JUMPDEST DUP2 PUSH2 0x7DB JUMPI PUSH0 SWAP1 POP PUSH2 0x889 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x7FB JUMPI PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x889 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x80D JUMPI PUSH2 0x80C PUSH2 0x734 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x734 JUMP JUMPDEST JUMPDEST POP PUSH2 0x889 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x85F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH2 0x859 PUSH2 0x734 JUMP JUMPDEST JUMPDEST PUSH2 0x889 JUMP JUMPDEST PUSH2 0x86C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x76D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x882 PUSH2 0x734 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8A6 DUP3 PUSH2 0x53A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B1 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP PUSH2 0x8DE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x7BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F0 DUP3 PUSH2 0x53A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FB DUP4 PUSH2 0x53A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x909 DUP2 PUSH2 0x53A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x920 JUMPI PUSH2 0x91F PUSH2 0x734 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x950 DUP3 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x960 DUP2 PUSH2 0x946 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x979 PUSH0 DUP4 ADD DUP5 PUSH2 0x957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x989 DUP3 PUSH2 0x53A JUMP JUMPDEST SWAP2 POP PUSH2 0x994 DUP4 PUSH2 0x53A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x734 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x53A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x9E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x9EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9B2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA09 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1649 DUP1 PUSH2 0xA1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CF PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FA PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x60A DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xC2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x762 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x76F DUP2 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x7BA DUP4 DUP4 PUSH2 0xB45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x951 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x942 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x939 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x950 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA42 DUP4 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA53 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA66 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD8 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB50 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC2 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC29 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAA PUSH0 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE77 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF56 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP3 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x10E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP3 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113A DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1154 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1162 DUP5 DUP3 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x11EA DUP2 DUP6 PUSH2 0x11A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x1203 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 DUP5 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1257 DUP3 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1267 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP2 EQ PUSH2 0x1271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1282 DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129A DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B5 DUP2 PUSH2 0x1291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DE DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EF DUP6 DUP3 DUP7 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131B PUSH0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1356 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1367 DUP7 DUP3 DUP8 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144A DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1463 PUSH0 DUP4 ADD DUP5 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148B DUP5 DUP3 DUP6 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH0 DUP4 ADD DUP7 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x155E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x156B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1586 PUSH0 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C3 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE DUP4 PUSH2 0x1288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x158C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FF PUSH0 DUP4 ADD DUP6 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xE9 XOR CODESIZE 0xCF 0x29 SWAP9 0xDF 0xCC 0xA9 0xAC DUP3 SWAP12 CALLF 0x4BE0 0xAE RETURNDATASIZE SWAP4 0xB7 0xFC 0xAA 0xB7 CREATE 0xD8 DUP10 KECCAK256 PUSH16 0x4C1BA4F164736F6C634300081E003300 ",
							"sourceMap": "33804:461:0:-:0;;;33919:233;;;;;;;;;;12484:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12558:5;12550;:13;;;;;;:::i;:::-;;12583:7;12573;:17;;;;;;:::i;:::-;;12484:113;;33966:39:::1;28961:4;33974:18;;33994:10;33966:7;;;:39;;:::i;:::-;;34015:32;33888:24;34036:10;34015:7;;;:32;;:::i;:::-;;34100:45;34106:10;34134;:8;;;:10;;:::i;:::-;34128:2;:16;;;;:::i;:::-;34118:7;:26;;;;:::i;:::-;34100:5;;;:45;;:::i;:::-;33804:461:::0;;29550:136;29627:4;29650:6;:12;29657:4;29650:12;;;;;;;;;;;:20;;:29;29671:7;29650:29;;;;;;;;;;;;;;;;;;;;;;;;;29643:36;;29550:136;;;;:::o;13590:82::-;13639:5;13663:2;13656:9;;13590:82;:::o;18264:208::-;18353:1;18334:21;;:7;:21;;;18330:91;;18407:1;18378:32;;;;;;;;;;;:::i;:::-;;;;;;;;18330:91;18430:35;18446:1;18450:7;18459:5;18430:7;;;:35;;:::i;:::-;18264:208;;:::o;16814:1107::-;16919:1;16903:18;;:4;:18;;;16899:540;;17055:5;17039:12;;:21;;;;;;;:::i;:::-;;;;;;;;16899:540;;;17091:19;17113:9;:15;17123:4;17113:15;;;;;;;;;;;;;;;;17091:37;;17160:5;17146:11;:19;17142:115;;;17217:4;17223:11;17236:5;17192:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17142:115;17409:5;17395:11;:19;17377:9;:15;17387:4;17377:15;;;;;;;;;;;;;;;:37;;;;17077:362;16899:540;17467:1;17453:16;;:2;:16;;;17449:425;;17632:5;17616:12;;:21;;;;;;;;;;;17449:425;;;17844:5;17827:9;:13;17837:2;17827:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17449:425;17904:2;17889:25;;17898:4;17889:25;;;17908:5;17889:25;;;;;;:::i;:::-;;;;;;;;16814:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:126::-;8293:7;8333:42;8326:5;8322:54;8311:65;;8256:126;;;:::o;8388:96::-;8425:7;8454:24;8472:5;8454:24;:::i;:::-;8443:35;;8388:96;;;:::o;8490:118::-;8577:24;8595:5;8577:24;:::i;:::-;8572:3;8565:37;8490:118;;:::o;8614:222::-;8707:4;8745:2;8734:9;8730:18;8722:26;;8758:71;8826:1;8815:9;8811:17;8802:6;8758:71;:::i;:::-;8614:222;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;33804:461:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_908": {
									"entryPoint": 1874,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1184": {
									"entryPoint": 1914,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 2226,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3246,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_972": {
									"entryPoint": 2631,
									"id": 972,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_993": {
									"entryPoint": 4246,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_1135": {
									"entryPoint": 2651,
									"id": 1135,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_611": {
									"entryPoint": 3119,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 2219,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_1173": {
									"entryPoint": 2885,
									"id": 1173,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 2244,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2391,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3709,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 1984,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1221,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1561,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": 1373,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_1007": {
									"entryPoint": 1310,
									"id": 1007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_1026": {
									"entryPoint": 1339,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_959": {
									"entryPoint": 1630,
									"id": 959,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1231": {
									"entryPoint": 1504,
									"id": 1231,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1077,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_1068": {
									"entryPoint": 1381,
									"id": 1068,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_1045": {
									"entryPoint": 1950,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_884": {
									"entryPoint": 2114,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_941": {
									"entryPoint": 956,
									"id": 941,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_326": {
									"entryPoint": 1730,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1255,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1264,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 1880,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9871:1",
										"nodeType": "YulBlock",
										"src": "0:9871:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:77:1",
													"nodeType": "YulBlock",
													"src": "1860:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:1"
																},
																"nativeSrc": "1871:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:1"
															},
															"nativeSrc": "1871:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:1"
																		},
																		"nativeSrc": "1910:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nativeSrc": "1903:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:1"
															},
															"nativeSrc": "1903:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:139:1"
											},
											{
												"body": {
													"nativeSrc": "1991:54:1",
													"nodeType": "YulBlock",
													"src": "1991:54:1",
													"statements": [
														{
															"nativeSrc": "2001:38:1",
															"nodeType": "YulAssignment",
															"src": "2001:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:1"
																		},
																		"nativeSrc": "2015:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:1"
																		},
																		"nativeSrc": "2031:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:1"
																},
																"nativeSrc": "2011:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:1",
														"nodeType": "YulTypedName",
														"src": "1974:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:1",
														"nodeType": "YulTypedName",
														"src": "1984:6:1",
														"type": ""
													}
												],
												"src": "1943:102:1"
											},
											{
												"body": {
													"nativeSrc": "2143:285:1",
													"nodeType": "YulBlock",
													"src": "2143:285:1",
													"statements": [
														{
															"nativeSrc": "2153:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:1"
																},
																"nativeSrc": "2167:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:1",
															"nodeType": "YulAssignment",
															"src": "2215:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:1"
																},
																"nativeSrc": "2222:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:1"
																		},
																		"nativeSrc": "2337:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:1"
																},
																"nativeSrc": "2302:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:1"
															},
															"nativeSrc": "2302:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:1"
														},
														{
															"nativeSrc": "2376:46:1",
															"nodeType": "YulAssignment",
															"src": "2376:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:1"
																		},
																		"nativeSrc": "2392:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:1"
																},
																"nativeSrc": "2383:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:1",
														"nodeType": "YulTypedName",
														"src": "2124:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:1",
														"nodeType": "YulTypedName",
														"src": "2131:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:1",
														"nodeType": "YulTypedName",
														"src": "2139:3:1",
														"type": ""
													}
												],
												"src": "2051:377:1"
											},
											{
												"body": {
													"nativeSrc": "2552:195:1",
													"nodeType": "YulBlock",
													"src": "2552:195:1",
													"statements": [
														{
															"nativeSrc": "2562:26:1",
															"nodeType": "YulAssignment",
															"src": "2562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:1"
																},
																"nativeSrc": "2570:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nativeSrc": "2605:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:1"
																		},
																		"nativeSrc": "2624:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:1"
																},
																"nativeSrc": "2598:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:1"
															},
															"nativeSrc": "2598:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:1"
														},
														{
															"nativeSrc": "2654:86:1",
															"nodeType": "YulAssignment",
															"src": "2654:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:1"
																},
																"nativeSrc": "2662:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:1",
														"nodeType": "YulTypedName",
														"src": "2524:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:1",
														"nodeType": "YulTypedName",
														"src": "2536:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:1",
														"nodeType": "YulTypedName",
														"src": "2547:4:1",
														"type": ""
													}
												],
												"src": "2434:313:1"
											},
											{
												"body": {
													"nativeSrc": "2798:81:1",
													"nodeType": "YulBlock",
													"src": "2798:81:1",
													"statements": [
														{
															"nativeSrc": "2808:65:1",
															"nodeType": "YulAssignment",
															"src": "2808:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:1",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:1"
																},
																"nativeSrc": "2819:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:1",
														"nodeType": "YulTypedName",
														"src": "2780:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:1",
														"nodeType": "YulTypedName",
														"src": "2790:7:1",
														"type": ""
													}
												],
												"src": "2753:126:1"
											},
											{
												"body": {
													"nativeSrc": "2930:51:1",
													"nodeType": "YulBlock",
													"src": "2930:51:1",
													"statements": [
														{
															"nativeSrc": "2940:35:1",
															"nodeType": "YulAssignment",
															"src": "2940:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:1"
																},
																"nativeSrc": "2951:24:1",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:1",
														"nodeType": "YulTypedName",
														"src": "2912:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:1",
														"nodeType": "YulTypedName",
														"src": "2922:7:1",
														"type": ""
													}
												],
												"src": "2885:96:1"
											},
											{
												"body": {
													"nativeSrc": "3030:79:1",
													"nodeType": "YulBlock",
													"src": "3030:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:1",
																"nodeType": "YulBlock",
																"src": "3087:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:1"
																			},
																			"nativeSrc": "3089:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:1"
																		},
																		"nativeSrc": "3089:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:1"
																				},
																				"nativeSrc": "3060:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:1"
																		},
																		"nativeSrc": "3050:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:1"
																},
																"nativeSrc": "3043:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:1"
															},
															"nativeSrc": "3040:63:1",
															"nodeType": "YulIf",
															"src": "3040:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:1",
														"nodeType": "YulTypedName",
														"src": "3023:5:1",
														"type": ""
													}
												],
												"src": "2987:122:1"
											},
											{
												"body": {
													"nativeSrc": "3167:87:1",
													"nodeType": "YulBlock",
													"src": "3167:87:1",
													"statements": [
														{
															"nativeSrc": "3177:29:1",
															"nodeType": "YulAssignment",
															"src": "3177:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:1"
																},
																"nativeSrc": "3186:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:1"
																},
																"nativeSrc": "3215:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:1"
															},
															"nativeSrc": "3215:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:1",
														"nodeType": "YulTypedName",
														"src": "3145:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:1",
														"nodeType": "YulTypedName",
														"src": "3153:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:1",
														"nodeType": "YulTypedName",
														"src": "3161:5:1",
														"type": ""
													}
												],
												"src": "3115:139:1"
											},
											{
												"body": {
													"nativeSrc": "3305:32:1",
													"nodeType": "YulBlock",
													"src": "3305:32:1",
													"statements": [
														{
															"nativeSrc": "3315:16:1",
															"nodeType": "YulAssignment",
															"src": "3315:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:1",
																"nodeType": "YulIdentifier",
																"src": "3326:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:1",
														"nodeType": "YulTypedName",
														"src": "3287:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:1",
														"nodeType": "YulTypedName",
														"src": "3297:7:1",
														"type": ""
													}
												],
												"src": "3260:77:1"
											},
											{
												"body": {
													"nativeSrc": "3386:79:1",
													"nodeType": "YulBlock",
													"src": "3386:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:1",
																"nodeType": "YulBlock",
																"src": "3443:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:1"
																			},
																			"nativeSrc": "3445:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:1"
																		},
																		"nativeSrc": "3445:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:1"
																				},
																				"nativeSrc": "3416:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:1"
																		},
																		"nativeSrc": "3406:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:1"
																},
																"nativeSrc": "3399:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:1"
															},
															"nativeSrc": "3396:63:1",
															"nodeType": "YulIf",
															"src": "3396:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:1",
														"nodeType": "YulTypedName",
														"src": "3379:5:1",
														"type": ""
													}
												],
												"src": "3343:122:1"
											},
											{
												"body": {
													"nativeSrc": "3523:87:1",
													"nodeType": "YulBlock",
													"src": "3523:87:1",
													"statements": [
														{
															"nativeSrc": "3533:29:1",
															"nodeType": "YulAssignment",
															"src": "3533:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:1"
																},
																"nativeSrc": "3542:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:1"
																},
																"nativeSrc": "3571:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:1"
															},
															"nativeSrc": "3571:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:1",
														"nodeType": "YulTypedName",
														"src": "3501:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:1",
														"nodeType": "YulTypedName",
														"src": "3509:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:1",
														"nodeType": "YulTypedName",
														"src": "3517:5:1",
														"type": ""
													}
												],
												"src": "3471:139:1"
											},
											{
												"body": {
													"nativeSrc": "3699:391:1",
													"nodeType": "YulBlock",
													"src": "3699:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:1",
																"nodeType": "YulBlock",
																"src": "3745:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:1"
																			},
																			"nativeSrc": "3747:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:1"
																		},
																		"nativeSrc": "3747:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:1"
																		},
																		"nativeSrc": "3716:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:1"
																},
																"nativeSrc": "3712:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:1"
															},
															"nativeSrc": "3709:119:1",
															"nodeType": "YulIf",
															"src": "3709:119:1"
														},
														{
															"nativeSrc": "3838:117:1",
															"nodeType": "YulBlock",
															"src": "3838:117:1",
															"statements": [
																{
																	"nativeSrc": "3853:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:1"
																				},
																				"nativeSrc": "3913:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:1"
																		},
																		"nativeSrc": "3892:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:1",
															"nodeType": "YulBlock",
															"src": "3965:118:1",
															"statements": [
																{
																	"nativeSrc": "3980:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:1"
																				},
																				"nativeSrc": "4041:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:1"
																		},
																		"nativeSrc": "4020:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:1",
														"nodeType": "YulTypedName",
														"src": "3661:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:1",
														"nodeType": "YulTypedName",
														"src": "3672:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:1",
														"nodeType": "YulTypedName",
														"src": "3684:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:1",
														"nodeType": "YulTypedName",
														"src": "3692:6:1",
														"type": ""
													}
												],
												"src": "3616:474:1"
											},
											{
												"body": {
													"nativeSrc": "4161:53:1",
													"nodeType": "YulBlock",
													"src": "4161:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:1"
																		},
																		"nativeSrc": "4183:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:1"
																},
																"nativeSrc": "4171:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:1"
															},
															"nativeSrc": "4171:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:1",
														"nodeType": "YulTypedName",
														"src": "4149:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:1",
														"nodeType": "YulTypedName",
														"src": "4156:3:1",
														"type": ""
													}
												],
												"src": "4096:118:1"
											},
											{
												"body": {
													"nativeSrc": "4318:124:1",
													"nodeType": "YulBlock",
													"src": "4318:124:1",
													"statements": [
														{
															"nativeSrc": "4328:26:1",
															"nodeType": "YulAssignment",
															"src": "4328:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:1"
																},
																"nativeSrc": "4336:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:1"
																		},
																		"nativeSrc": "4417:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:1"
																},
																"nativeSrc": "4364:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:1"
															},
															"nativeSrc": "4364:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:1",
														"nodeType": "YulTypedName",
														"src": "4290:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:1",
														"nodeType": "YulTypedName",
														"src": "4302:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:1",
														"nodeType": "YulTypedName",
														"src": "4313:4:1",
														"type": ""
													}
												],
												"src": "4220:222:1"
											},
											{
												"body": {
													"nativeSrc": "4548:519:1",
													"nodeType": "YulBlock",
													"src": "4548:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:1",
																"nodeType": "YulBlock",
																"src": "4594:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:1"
																			},
																			"nativeSrc": "4596:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:1"
																		},
																		"nativeSrc": "4596:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:1"
																		},
																		"nativeSrc": "4565:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:1"
																},
																"nativeSrc": "4561:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:1"
															},
															"nativeSrc": "4558:119:1",
															"nodeType": "YulIf",
															"src": "4558:119:1"
														},
														{
															"nativeSrc": "4687:117:1",
															"nodeType": "YulBlock",
															"src": "4687:117:1",
															"statements": [
																{
																	"nativeSrc": "4702:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:1"
																				},
																				"nativeSrc": "4762:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:1"
																		},
																		"nativeSrc": "4741:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:1",
															"nodeType": "YulBlock",
															"src": "4814:118:1",
															"statements": [
																{
																	"nativeSrc": "4829:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:1"
																				},
																				"nativeSrc": "4890:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:1"
																		},
																		"nativeSrc": "4869:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:1",
															"nodeType": "YulBlock",
															"src": "4942:118:1",
															"statements": [
																{
																	"nativeSrc": "4957:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:1"
																				},
																				"nativeSrc": "5018:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:1"
																		},
																		"nativeSrc": "4997:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:1",
														"nodeType": "YulTypedName",
														"src": "4502:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:1",
														"nodeType": "YulTypedName",
														"src": "4513:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:1",
														"nodeType": "YulTypedName",
														"src": "4525:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:1",
														"nodeType": "YulTypedName",
														"src": "4533:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:1",
														"nodeType": "YulTypedName",
														"src": "4541:6:1",
														"type": ""
													}
												],
												"src": "4448:619:1"
											},
											{
												"body": {
													"nativeSrc": "5118:32:1",
													"nodeType": "YulBlock",
													"src": "5118:32:1",
													"statements": [
														{
															"nativeSrc": "5128:16:1",
															"nodeType": "YulAssignment",
															"src": "5128:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:1",
																"nodeType": "YulIdentifier",
																"src": "5139:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:1",
														"nodeType": "YulTypedName",
														"src": "5100:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:1",
														"nodeType": "YulTypedName",
														"src": "5110:7:1",
														"type": ""
													}
												],
												"src": "5073:77:1"
											},
											{
												"body": {
													"nativeSrc": "5199:79:1",
													"nodeType": "YulBlock",
													"src": "5199:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:1",
																"nodeType": "YulBlock",
																"src": "5256:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:1"
																			},
																			"nativeSrc": "5258:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:1"
																		},
																		"nativeSrc": "5258:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:1"
																				},
																				"nativeSrc": "5229:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:1"
																		},
																		"nativeSrc": "5219:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nativeSrc": "5212:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:1"
															},
															"nativeSrc": "5209:63:1",
															"nodeType": "YulIf",
															"src": "5209:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:1",
														"nodeType": "YulTypedName",
														"src": "5192:5:1",
														"type": ""
													}
												],
												"src": "5156:122:1"
											},
											{
												"body": {
													"nativeSrc": "5336:87:1",
													"nodeType": "YulBlock",
													"src": "5336:87:1",
													"statements": [
														{
															"nativeSrc": "5346:29:1",
															"nodeType": "YulAssignment",
															"src": "5346:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:1"
																},
																"nativeSrc": "5355:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:1"
																},
																"nativeSrc": "5384:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:1"
															},
															"nativeSrc": "5384:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:1",
														"nodeType": "YulTypedName",
														"src": "5314:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:1",
														"nodeType": "YulTypedName",
														"src": "5322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:1",
														"nodeType": "YulTypedName",
														"src": "5330:5:1",
														"type": ""
													}
												],
												"src": "5284:139:1"
											},
											{
												"body": {
													"nativeSrc": "5495:263:1",
													"nodeType": "YulBlock",
													"src": "5495:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:1",
																"nodeType": "YulBlock",
																"src": "5541:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:1"
																			},
																			"nativeSrc": "5543:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:1"
																		},
																		"nativeSrc": "5543:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:1"
																		},
																		"nativeSrc": "5512:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:1"
																},
																"nativeSrc": "5508:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:1"
															},
															"nativeSrc": "5505:119:1",
															"nodeType": "YulIf",
															"src": "5505:119:1"
														},
														{
															"nativeSrc": "5634:117:1",
															"nodeType": "YulBlock",
															"src": "5634:117:1",
															"statements": [
																{
																	"nativeSrc": "5649:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:1"
																				},
																				"nativeSrc": "5709:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:1"
																		},
																		"nativeSrc": "5688:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:1",
														"nodeType": "YulTypedName",
														"src": "5465:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:1",
														"nodeType": "YulTypedName",
														"src": "5476:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:1",
														"nodeType": "YulTypedName",
														"src": "5488:6:1",
														"type": ""
													}
												],
												"src": "5429:329:1"
											},
											{
												"body": {
													"nativeSrc": "5829:53:1",
													"nodeType": "YulBlock",
													"src": "5829:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:1"
																		},
																		"nativeSrc": "5851:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:1"
																},
																"nativeSrc": "5839:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:1"
															},
															"nativeSrc": "5839:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:1",
														"nodeType": "YulTypedName",
														"src": "5817:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:1",
														"nodeType": "YulTypedName",
														"src": "5824:3:1",
														"type": ""
													}
												],
												"src": "5764:118:1"
											},
											{
												"body": {
													"nativeSrc": "5986:124:1",
													"nodeType": "YulBlock",
													"src": "5986:124:1",
													"statements": [
														{
															"nativeSrc": "5996:26:1",
															"nodeType": "YulAssignment",
															"src": "5996:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:1"
																},
																"nativeSrc": "6004:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:1"
																		},
																		"nativeSrc": "6085:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:1"
																},
																"nativeSrc": "6032:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:1"
															},
															"nativeSrc": "6032:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:1",
														"nodeType": "YulTypedName",
														"src": "5958:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:1",
														"nodeType": "YulTypedName",
														"src": "5970:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:1",
														"nodeType": "YulTypedName",
														"src": "5981:4:1",
														"type": ""
													}
												],
												"src": "5888:222:1"
											},
											{
												"body": {
													"nativeSrc": "6199:391:1",
													"nodeType": "YulBlock",
													"src": "6199:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:1",
																"nodeType": "YulBlock",
																"src": "6245:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:1"
																			},
																			"nativeSrc": "6247:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:1"
																		},
																		"nativeSrc": "6247:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:1"
																		},
																		"nativeSrc": "6216:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:1"
																},
																"nativeSrc": "6212:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:1"
															},
															"nativeSrc": "6209:119:1",
															"nodeType": "YulIf",
															"src": "6209:119:1"
														},
														{
															"nativeSrc": "6338:117:1",
															"nodeType": "YulBlock",
															"src": "6338:117:1",
															"statements": [
																{
																	"nativeSrc": "6353:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:1"
																				},
																				"nativeSrc": "6413:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:1"
																		},
																		"nativeSrc": "6392:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:1",
															"nodeType": "YulBlock",
															"src": "6465:118:1",
															"statements": [
																{
																	"nativeSrc": "6480:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:1"
																				},
																				"nativeSrc": "6541:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:1"
																		},
																		"nativeSrc": "6520:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:1",
														"nodeType": "YulTypedName",
														"src": "6161:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:1",
														"nodeType": "YulTypedName",
														"src": "6172:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:1",
														"nodeType": "YulTypedName",
														"src": "6184:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:1",
														"nodeType": "YulTypedName",
														"src": "6192:6:1",
														"type": ""
													}
												],
												"src": "6116:474:1"
											},
											{
												"body": {
													"nativeSrc": "6639:43:1",
													"nodeType": "YulBlock",
													"src": "6639:43:1",
													"statements": [
														{
															"nativeSrc": "6649:27:1",
															"nodeType": "YulAssignment",
															"src": "6649:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:1"
																},
																"nativeSrc": "6660:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:1",
														"nodeType": "YulTypedName",
														"src": "6621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:1",
														"nodeType": "YulTypedName",
														"src": "6631:7:1",
														"type": ""
													}
												],
												"src": "6596:86:1"
											},
											{
												"body": {
													"nativeSrc": "6749:51:1",
													"nodeType": "YulBlock",
													"src": "6749:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:1"
																		},
																		"nativeSrc": "6771:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:1"
																},
																"nativeSrc": "6759:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:1"
															},
															"nativeSrc": "6759:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:1",
														"nodeType": "YulTypedName",
														"src": "6737:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:1",
														"nodeType": "YulTypedName",
														"src": "6744:3:1",
														"type": ""
													}
												],
												"src": "6688:112:1"
											},
											{
												"body": {
													"nativeSrc": "6900:120:1",
													"nodeType": "YulBlock",
													"src": "6900:120:1",
													"statements": [
														{
															"nativeSrc": "6910:26:1",
															"nodeType": "YulAssignment",
															"src": "6910:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:1"
																},
																"nativeSrc": "6918:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:1"
																		},
																		"nativeSrc": "6995:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:1"
																},
																"nativeSrc": "6946:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:1"
															},
															"nativeSrc": "6946:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:1",
														"nodeType": "YulTypedName",
														"src": "6872:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:1",
														"nodeType": "YulTypedName",
														"src": "6884:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:1",
														"nodeType": "YulTypedName",
														"src": "6895:4:1",
														"type": ""
													}
												],
												"src": "6806:214:1"
											},
											{
												"body": {
													"nativeSrc": "7092:263:1",
													"nodeType": "YulBlock",
													"src": "7092:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:1",
																"nodeType": "YulBlock",
																"src": "7138:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:1"
																			},
																			"nativeSrc": "7140:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:1"
																		},
																		"nativeSrc": "7140:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:1"
																		},
																		"nativeSrc": "7109:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:1"
																},
																"nativeSrc": "7105:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:1"
															},
															"nativeSrc": "7102:119:1",
															"nodeType": "YulIf",
															"src": "7102:119:1"
														},
														{
															"nativeSrc": "7231:117:1",
															"nodeType": "YulBlock",
															"src": "7231:117:1",
															"statements": [
																{
																	"nativeSrc": "7246:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:1"
																				},
																				"nativeSrc": "7306:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:1"
																		},
																		"nativeSrc": "7285:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:1",
														"nodeType": "YulTypedName",
														"src": "7062:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:1",
														"nodeType": "YulTypedName",
														"src": "7073:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:1",
														"nodeType": "YulTypedName",
														"src": "7085:6:1",
														"type": ""
													}
												],
												"src": "7026:329:1"
											},
											{
												"body": {
													"nativeSrc": "7444:391:1",
													"nodeType": "YulBlock",
													"src": "7444:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:1",
																"nodeType": "YulBlock",
																"src": "7490:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:1"
																			},
																			"nativeSrc": "7492:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:1"
																		},
																		"nativeSrc": "7492:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:1"
																		},
																		"nativeSrc": "7461:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:1"
																},
																"nativeSrc": "7457:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:1"
															},
															"nativeSrc": "7454:119:1",
															"nodeType": "YulIf",
															"src": "7454:119:1"
														},
														{
															"nativeSrc": "7583:117:1",
															"nodeType": "YulBlock",
															"src": "7583:117:1",
															"statements": [
																{
																	"nativeSrc": "7598:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:1"
																				},
																				"nativeSrc": "7658:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:1"
																		},
																		"nativeSrc": "7637:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:1",
															"nodeType": "YulBlock",
															"src": "7710:118:1",
															"statements": [
																{
																	"nativeSrc": "7725:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:1"
																				},
																				"nativeSrc": "7786:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:1"
																		},
																		"nativeSrc": "7765:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:1",
														"nodeType": "YulTypedName",
														"src": "7406:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:1",
														"nodeType": "YulTypedName",
														"src": "7417:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:1",
														"nodeType": "YulTypedName",
														"src": "7429:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:1",
														"nodeType": "YulTypedName",
														"src": "7437:6:1",
														"type": ""
													}
												],
												"src": "7361:474:1"
											},
											{
												"body": {
													"nativeSrc": "7869:152:1",
													"nodeType": "YulBlock",
													"src": "7869:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:1"
																},
																"nativeSrc": "7879:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:1"
															},
															"nativeSrc": "7879:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:1"
																},
																"nativeSrc": "7976:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:1"
															},
															"nativeSrc": "7976:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:1"
																},
																"nativeSrc": "8000:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:1"
															},
															"nativeSrc": "8000:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7841:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:1"
											},
											{
												"body": {
													"nativeSrc": "8078:269:1",
													"nodeType": "YulBlock",
													"src": "8078:269:1",
													"statements": [
														{
															"nativeSrc": "8088:22:1",
															"nodeType": "YulAssignment",
															"src": "8088:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8102:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8102:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8098:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:1"
																},
																"nativeSrc": "8098:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:1"
																}
															]
														},
														{
															"nativeSrc": "8119:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:1"
																},
																"nativeSrc": "8145:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:1",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:51:1",
																"nodeType": "YulBlock",
																"src": "8196:51:1",
																"statements": [
																	{
																		"nativeSrc": "8210:27:1",
																		"nodeType": "YulAssignment",
																		"src": "8210:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8224:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8224:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8232:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8220:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:1"
																			},
																			"nativeSrc": "8220:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8210:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:1"
																},
																"nativeSrc": "8169:26:1",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:1"
															},
															"nativeSrc": "8166:81:1",
															"nodeType": "YulIf",
															"src": "8166:81:1"
														},
														{
															"body": {
																"nativeSrc": "8299:42:1",
																"nodeType": "YulBlock",
																"src": "8299:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8313:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8313:16:1"
																			},
																			"nativeSrc": "8313:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:18:1"
																		},
																		"nativeSrc": "8313:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8263:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8263:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8286:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8286:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8283:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8283:2:1"
																		},
																		"nativeSrc": "8283:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8260:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8260:2:1"
																},
																"nativeSrc": "8260:38:1",
																"nodeType": "YulFunctionCall",
																"src": "8260:38:1"
															},
															"nativeSrc": "8257:84:1",
															"nodeType": "YulIf",
															"src": "8257:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8027:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8062:4:1",
														"nodeType": "YulTypedName",
														"src": "8062:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8071:6:1",
														"nodeType": "YulTypedName",
														"src": "8071:6:1",
														"type": ""
													}
												],
												"src": "8027:320:1"
											},
											{
												"body": {
													"nativeSrc": "8418:53:1",
													"nodeType": "YulBlock",
													"src": "8418:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8435:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8435:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8458:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8458:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8440:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8440:17:1"
																		},
																		"nativeSrc": "8440:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8428:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:1"
																},
																"nativeSrc": "8428:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8428:37:1"
															},
															"nativeSrc": "8428:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8428:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8353:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8406:5:1",
														"nodeType": "YulTypedName",
														"src": "8406:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8413:3:1",
														"nodeType": "YulTypedName",
														"src": "8413:3:1",
														"type": ""
													}
												],
												"src": "8353:118:1"
											},
											{
												"body": {
													"nativeSrc": "8631:288:1",
													"nodeType": "YulBlock",
													"src": "8631:288:1",
													"statements": [
														{
															"nativeSrc": "8641:26:1",
															"nodeType": "YulAssignment",
															"src": "8641:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8653:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8653:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8649:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:1"
																},
																"nativeSrc": "8649:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8649:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8641:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8641:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8721:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8721:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8734:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8745:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8745:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:1"
																		},
																		"nativeSrc": "8730:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8677:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8677:43:1"
																},
																"nativeSrc": "8677:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8677:71:1"
															},
															"nativeSrc": "8677:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8677:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8802:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8826:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:1"
																		},
																		"nativeSrc": "8811:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8758:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:1"
																},
																"nativeSrc": "8758:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8758:72:1"
															},
															"nativeSrc": "8758:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8758:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8884:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8884:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8897:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8897:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8908:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8908:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8893:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:1"
																		},
																		"nativeSrc": "8893:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8840:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8840:43:1"
																},
																"nativeSrc": "8840:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8840:72:1"
															},
															"nativeSrc": "8840:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8840:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8477:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:1",
														"nodeType": "YulTypedName",
														"src": "8587:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8599:6:1",
														"nodeType": "YulTypedName",
														"src": "8599:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8607:6:1",
														"nodeType": "YulTypedName",
														"src": "8607:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8615:6:1",
														"nodeType": "YulTypedName",
														"src": "8615:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8626:4:1",
														"nodeType": "YulTypedName",
														"src": "8626:4:1",
														"type": ""
													}
												],
												"src": "8477:442:1"
											},
											{
												"body": {
													"nativeSrc": "9023:124:1",
													"nodeType": "YulBlock",
													"src": "9023:124:1",
													"statements": [
														{
															"nativeSrc": "9033:26:1",
															"nodeType": "YulAssignment",
															"src": "9033:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9045:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9045:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9056:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9056:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9041:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:1"
																},
																"nativeSrc": "9041:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9041:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9033:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9033:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9113:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9113:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9126:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9126:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9137:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9137:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9122:3:1"
																		},
																		"nativeSrc": "9122:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9122:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9069:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9069:43:1"
																},
																"nativeSrc": "9069:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9069:71:1"
															},
															"nativeSrc": "9069:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9069:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8925:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8995:9:1",
														"nodeType": "YulTypedName",
														"src": "8995:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9007:6:1",
														"nodeType": "YulTypedName",
														"src": "9007:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9018:4:1",
														"nodeType": "YulTypedName",
														"src": "9018:4:1",
														"type": ""
													}
												],
												"src": "8925:222:1"
											},
											{
												"body": {
													"nativeSrc": "9181:152:1",
													"nodeType": "YulBlock",
													"src": "9181:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9198:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9198:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9201:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9201:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9191:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:1"
																},
																"nativeSrc": "9191:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9191:88:1"
															},
															"nativeSrc": "9191:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9191:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9295:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9295:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9298:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9298:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9288:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9288:6:1"
																},
																"nativeSrc": "9288:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9288:15:1"
															},
															"nativeSrc": "9288:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9288:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9319:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9322:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9312:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:1"
																},
																"nativeSrc": "9312:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9312:15:1"
															},
															"nativeSrc": "9312:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9312:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9153:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9153:180:1"
											},
											{
												"body": {
													"nativeSrc": "9383:147:1",
													"nodeType": "YulBlock",
													"src": "9383:147:1",
													"statements": [
														{
															"nativeSrc": "9393:25:1",
															"nodeType": "YulAssignment",
															"src": "9393:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9416:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9416:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9398:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9398:17:1"
																},
																"nativeSrc": "9398:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9398:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9393:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9393:1:1"
																}
															]
														},
														{
															"nativeSrc": "9427:25:1",
															"nodeType": "YulAssignment",
															"src": "9427:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9450:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9450:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9432:17:1"
																},
																"nativeSrc": "9432:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9432:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9427:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9427:1:1"
																}
															]
														},
														{
															"nativeSrc": "9461:16:1",
															"nodeType": "YulAssignment",
															"src": "9461:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9472:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9472:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9475:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9475:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9468:3:1"
																},
																"nativeSrc": "9468:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9468:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9461:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9501:22:1",
																"nodeType": "YulBlock",
																"src": "9501:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9503:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9503:16:1"
																			},
																			"nativeSrc": "9503:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9503:18:1"
																		},
																		"nativeSrc": "9503:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9503:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9493:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9493:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9496:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9496:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9490:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9490:2:1"
																},
																"nativeSrc": "9490:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9490:10:1"
															},
															"nativeSrc": "9487:36:1",
															"nodeType": "YulIf",
															"src": "9487:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9339:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9370:1:1",
														"nodeType": "YulTypedName",
														"src": "9370:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9373:1:1",
														"nodeType": "YulTypedName",
														"src": "9373:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9379:3:1",
														"nodeType": "YulTypedName",
														"src": "9379:3:1",
														"type": ""
													}
												],
												"src": "9339:191:1"
											},
											{
												"body": {
													"nativeSrc": "9662:206:1",
													"nodeType": "YulBlock",
													"src": "9662:206:1",
													"statements": [
														{
															"nativeSrc": "9672:26:1",
															"nodeType": "YulAssignment",
															"src": "9672:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9684:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9684:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9695:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9695:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9680:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:1"
																},
																"nativeSrc": "9680:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9680:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9672:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9672:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9752:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9752:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9765:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9776:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9761:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:1"
																		},
																		"nativeSrc": "9761:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9761:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9708:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9708:43:1"
																},
																"nativeSrc": "9708:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9708:71:1"
															},
															"nativeSrc": "9708:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9708:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9833:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9846:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9857:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9857:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:1"
																		},
																		"nativeSrc": "9842:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9789:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9789:43:1"
																},
																"nativeSrc": "9789:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9789:72:1"
															},
															"nativeSrc": "9789:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9789:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "9536:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9626:9:1",
														"nodeType": "YulTypedName",
														"src": "9626:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9638:6:1",
														"nodeType": "YulTypedName",
														"src": "9638:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9646:6:1",
														"nodeType": "YulTypedName",
														"src": "9646:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9657:4:1",
														"nodeType": "YulTypedName",
														"src": "9657:4:1",
														"type": ""
													}
												],
												"src": "9536:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f5ffd5b610132600480360381019061012d9190611140565b6103bc565b60405161013f9190611185565b60405180910390f35b610150610435565b60405161015d919061120e565b60405180910390f35b610180600480360381019061017b91906112bb565b6104c5565b60405161018d9190611185565b60405180910390f35b61019e6104e7565b6040516101ab9190611308565b60405180910390f35b6101ce60048036038101906101c99190611321565b6104f0565b6040516101db9190611185565b60405180910390f35b6101fe60048036038101906101f991906113a4565b61051e565b60405161020b91906113de565b60405180910390f35b61022e600480360381019061022991906113f7565b61053b565b005b61023861055d565b6040516102459190611450565b60405180910390f35b610268600480360381019061026391906113f7565b610565565b005b610284600480360381019061027f91906112bb565b6105e0565b005b6102a0600480360381019061029b9190611469565b610619565b6040516102ad9190611308565b60405180910390f35b6102d060048036038101906102cb91906113f7565b61065e565b6040516102dd9190611185565b60405180910390f35b6102ee6106c2565b6040516102fb919061120e565b60405180910390f35b61030c610752565b60405161031991906113de565b60405180910390f35b61033c600480360381019061033791906112bb565b610758565b6040516103499190611185565b60405180910390f35b61035a61077a565b60405161036791906113de565b60405180910390f35b61038a600480360381019061038591906113f7565b61079e565b005b6103a660048036038101906103a19190611494565b6107c0565b6040516103b39190611308565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610842565b5b9050919050565b606060038054610444906114ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114ff565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f5f6104cf6108ab565b90506104dc8185856108b2565b600191505092915050565b5f600254905090565b5f5f6104fa6108ab565b90506105078582856108c4565b610512858585610957565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a47565b6105578383610a5b565b50505050565b5f6012905090565b61056d6108ab565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b45565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060a81610a47565b6106148383610c2f565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d1906114ff565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd906114ff565b80156107485780601f1061071f57610100808354040283529160200191610748565b820191905f5260205f20905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6107626108ab565b905061076f818585610957565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a78261051e565b6107b081610a47565b6107ba8383610b45565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108bf8383836001610cae565b505050565b5f6108cf84846107c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109515781811015610942578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109399392919061153e565b60405180910390fd5b61095084848484035f610cae565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109be9190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a37575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2e9190611573565b60405180910390fd5b610a42838383610e7d565b505050565b610a5881610a536108ab565b611096565b50565b5f610a66838361065e565b610b3b57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad86108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3f565b5f90505b92915050565b5f610b50838361065e565b15610c25575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc26108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c29565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c969190611573565b60405180910390fd5b610caa5f8383610e7d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d159190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d859190611573565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e77578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6e9190611308565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecd578060025f828254610ec191906115b9565b92505081905550610f9b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f56578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4d9392919061153e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe2578060025f828254039250508190555061102c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110899190611308565b60405180910390a3505050565b6110a0828261065e565b6110e35780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110da9291906115ec565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111f816110eb565b8114611129575f5ffd5b50565b5f8135905061113a81611116565b92915050565b5f60208284031215611155576111546110e7565b5b5f6111628482850161112c565b91505092915050565b5f8115159050919050565b61117f8161116b565b82525050565b5f6020820190506111985f830184611176565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111e08261119e565b6111ea81856111a8565b93506111fa8185602086016111b8565b611203816111c6565b840191505092915050565b5f6020820190508181035f83015261122681846111d6565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112578261122e565b9050919050565b6112678161124d565b8114611271575f5ffd5b50565b5f813590506112828161125e565b92915050565b5f819050919050565b61129a81611288565b81146112a4575f5ffd5b50565b5f813590506112b581611291565b92915050565b5f5f604083850312156112d1576112d06110e7565b5b5f6112de85828601611274565b92505060206112ef858286016112a7565b9150509250929050565b61130281611288565b82525050565b5f60208201905061131b5f8301846112f9565b92915050565b5f5f5f60608486031215611338576113376110e7565b5b5f61134586828701611274565b935050602061135686828701611274565b9250506040611367868287016112a7565b9150509250925092565b5f819050919050565b61138381611371565b811461138d575f5ffd5b50565b5f8135905061139e8161137a565b92915050565b5f602082840312156113b9576113b86110e7565b5b5f6113c684828501611390565b91505092915050565b6113d881611371565b82525050565b5f6020820190506113f15f8301846113cf565b92915050565b5f5f6040838503121561140d5761140c6110e7565b5b5f61141a85828601611390565b925050602061142b85828601611274565b9150509250929050565b5f60ff82169050919050565b61144a81611435565b82525050565b5f6020820190506114635f830184611441565b92915050565b5f6020828403121561147e5761147d6110e7565b5b5f61148b84828501611274565b91505092915050565b5f5f604083850312156114aa576114a96110e7565b5b5f6114b785828601611274565b92505060206114c885828601611274565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151657607f821691505b602082108103611529576115286114d2565b5b50919050565b6115388161124d565b82525050565b5f6060820190506115515f83018661152f565b61155e60208301856112f9565b61156b60408301846112f9565b949350505050565b5f6020820190506115865f83018461152f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c382611288565b91506115ce83611288565b92508282019050808211156115e6576115e561158c565b5b92915050565b5f6040820190506115ff5f83018561152f565b61160c60208301846113cf565b939250505056fea2646970667358221220c9e91838cf2998dfcca9ac829be34be0ae3d93b7fcaab7f0d889206f4c1ba4f164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CF PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FA PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x60A DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xC2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x762 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x76F DUP2 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x7BA DUP4 DUP4 PUSH2 0xB45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x951 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x942 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x939 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x950 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA42 DUP4 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA53 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA66 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD8 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB50 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC2 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC29 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAA PUSH0 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE77 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF56 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP3 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x10E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP3 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113A DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1154 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1162 DUP5 DUP3 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x11EA DUP2 DUP6 PUSH2 0x11A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x1203 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 DUP5 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1257 DUP3 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1267 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP2 EQ PUSH2 0x1271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1282 DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129A DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B5 DUP2 PUSH2 0x1291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DE DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EF DUP6 DUP3 DUP7 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131B PUSH0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1356 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1367 DUP7 DUP3 DUP8 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144A DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1463 PUSH0 DUP4 ADD DUP5 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148B DUP5 DUP3 DUP6 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH0 DUP4 ADD DUP7 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x155E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x156B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1586 PUSH0 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C3 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE DUP4 PUSH2 0x1288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x158C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FF PUSH0 DUP4 ADD DUP6 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xE9 XOR CODESIZE 0xCF 0x29 SWAP9 0xDF 0xCC 0xA9 0xAC DUP3 SWAP12 CALLF 0x4BE0 0xAE RETURNDATASIZE SWAP4 0xB7 0xFC 0xAA 0xB7 CREATE 0xD8 DUP10 KECCAK256 PUSH16 0x4C1BA4F164736F6C634300081E003300 ",
							"sourceMap": "33804:461:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29261:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12662:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14804:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13705:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15582:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30506:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30922:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13590:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32024:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34158:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13835:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29550:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12864:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28916:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14146:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33850:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31338:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14357:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29261:202;29346:4;29384:32;29369:47;;;:11;:47;;;;:87;;;;29420:36;29444:11;29420:23;:36::i;:::-;29369:87;29362:94;;29261:202;;;:::o;12662:89::-;12707:13;12739:5;12732:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12662:89;:::o;14804:186::-;14877:4;14893:13;14909:12;:10;:12::i;:::-;14893:28;;14931:31;14940:5;14947:7;14956:5;14931:8;:31::i;:::-;14979:4;14972:11;;;14804:186;;;;:::o;13705:97::-;13757:7;13783:12;;13776:19;;13705:97;:::o;15582:244::-;15669:4;15685:15;15703:12;:10;:12::i;:::-;15685:30;;15725:37;15741:4;15747:7;15756:5;15725:15;:37::i;:::-;15772:26;15782:4;15788:2;15792:5;15772:9;:26::i;:::-;15815:4;15808:11;;;15582:244;;;;;:::o;30506:120::-;30571:7;30597:6;:12;30604:4;30597:12;;;;;;;;;;;:22;;;30590:29;;30506:120;;;:::o;30922:136::-;30996:18;31009:4;30996:12;:18::i;:::-;29193:16;29204:4;29193:10;:16::i;:::-;31026:25:::1;31037:4;31043:7;31026:10;:25::i;:::-;;30922:136:::0;;;:::o;13590:82::-;13639:5;13663:2;13656:9;;13590:82;:::o;32024:245::-;32139:12;:10;:12::i;:::-;32117:34;;:18;:34;;;32113:102;;32174:30;;;;;;;;;;;;;;32113:102;32225:37;32237:4;32243:18;32225:11;:37::i;:::-;;32024:245;;:::o;34158:105::-;33888:24;29193:16;29204:4;29193:10;:16::i;:::-;34239:17:::1;34245:2;34249:6;34239:5;:17::i;:::-;34158:105:::0;;;:::o;13835:116::-;13900:7;13926:9;:18;13936:7;13926:18;;;;;;;;;;;;;;;;13919:25;;13835:116;;;:::o;29550:136::-;29627:4;29650:6;:12;29657:4;29650:12;;;;;;;;;;;:20;;:29;29671:7;29650:29;;;;;;;;;;;;;;;;;;;;;;;;;29643:36;;29550:136;;;;:::o;12864:93::-;12911:13;12943:7;12936:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12864:93;:::o;28916:49::-;28961:4;28916:49;;;:::o;14146:178::-;14215:4;14231:13;14247:12;:10;:12::i;:::-;14231:28;;14269:27;14279:5;14286:2;14290:5;14269:9;:27::i;:::-;14313:4;14306:11;;;14146:178;;;;:::o;33850:62::-;33888:24;33850:62;:::o;31338:138::-;31413:18;31426:4;31413:12;:18::i;:::-;29193:16;29204:4;29193:10;:16::i;:::-;31443:26:::1;31455:4;31461:7;31443:11;:26::i;:::-;;31338:138:::0;;;:::o;14357:140::-;14437:7;14463:11;:18;14475:5;14463:18;;;;;;;;;;;;;;;:27;14482:7;14463:27;;;;;;;;;;;;;;;;14456:34;;14357:140;;;;:::o;26706:146::-;26782:4;26820:25;26805:40;;;:11;:40;;;;26798:47;;26706:146;;;:::o;4210:96::-;4263:7;4289:10;4282:17;;4210:96;:::o;19532:128::-;19616:37;19625:5;19632:7;19641:5;19648:4;19616:8;:37::i;:::-;19532:128;;;:::o;21221:476::-;21320:24;21347:25;21357:5;21364:7;21347:9;:25::i;:::-;21320:52;;21405:17;21386:16;:36;21382:309;;;21461:5;21442:16;:24;21438:130;;;21520:7;21529:16;21547:5;21493:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21438:130;21609:57;21618:5;21625:7;21653:5;21634:16;:24;21660:5;21609:8;:57::i;:::-;21382:309;21310:387;21221:476;;;:::o;16199:300::-;16298:1;16282:18;;:4;:18;;;16278:86;;16350:1;16323:30;;;;;;;;;;;:::i;:::-;;;;;;;;16278:86;16391:1;16377:16;;:2;:16;;;16373:86;;16445:1;16416:32;;;;;;;;;;;:::i;:::-;;;;;;;;16373:86;16468:24;16476:4;16482:2;16486:5;16468:7;:24::i;:::-;16199:300;;;:::o;29895:103::-;29961:30;29972:4;29978:12;:10;:12::i;:::-;29961:10;:30::i;:::-;29895:103;:::o;32875:316::-;32952:4;32973:22;32981:4;32987:7;32973;:22::i;:::-;32968:217;;33043:4;33011:6;:12;33018:4;33011:12;;;;;;;;;;;:20;;:29;33032:7;33011:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;33093:12;:10;:12::i;:::-;33066:40;;33084:7;33066:40;;33078:4;33066:40;;;;;;;;;;33127:4;33120:11;;;;32968:217;33169:5;33162:12;;32875:316;;;;;:::o;33428:317::-;33506:4;33526:22;33534:4;33540:7;33526;:22::i;:::-;33522:217;;;33596:5;33564:6;:12;33571:4;33564:12;;;;;;;;;;;:20;;:29;33585:7;33564:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;33647:12;:10;:12::i;:::-;33620:40;;33638:7;33620:40;;33632:4;33620:40;;;;;;;;;;33681:4;33674:11;;;;33522:217;33723:5;33716:12;;33428:317;;;;;:::o;18264:208::-;18353:1;18334:21;;:7;:21;;;18330:91;;18407:1;18378:32;;;;;;;;;;;:::i;:::-;;;;;;;;18330:91;18430:35;18446:1;18450:7;18459:5;18430:7;:35::i;:::-;18264:208;;:::o;20507:432::-;20636:1;20619:19;;:5;:19;;;20615:89;;20690:1;20661:32;;;;;;;;;;;:::i;:::-;;;;;;;;20615:89;20736:1;20717:21;;:7;:21;;;20713:90;;20789:1;20761:31;;;;;;;;;;;:::i;:::-;;;;;;;;20713:90;20842:5;20812:11;:18;20824:5;20812:18;;;;;;;;;;;;;;;:27;20831:7;20812:27;;;;;;;;;;;;;;;:35;;;;20861:9;20857:76;;;20907:7;20891:31;;20900:5;20891:31;;;20916:5;20891:31;;;;;;:::i;:::-;;;;;;;;20857:76;20507:432;;;;:::o;16814:1107::-;16919:1;16903:18;;:4;:18;;;16899:540;;17055:5;17039:12;;:21;;;;;;;:::i;:::-;;;;;;;;16899:540;;;17091:19;17113:9;:15;17123:4;17113:15;;;;;;;;;;;;;;;;17091:37;;17160:5;17146:11;:19;17142:115;;;17217:4;17223:11;17236:5;17192:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17142:115;17409:5;17395:11;:19;17377:9;:15;17387:4;17377:15;;;;;;;;;;;;;;;:37;;;;17077:362;16899:540;17467:1;17453:16;;:2;:16;;;17449:425;;17632:5;17616:12;;:21;;;;;;;;;;;17449:425;;;17844:5;17827:9;:13;17837:2;17827:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17449:425;17904:2;17889:25;;17898:4;17889:25;;;17908:5;17889:25;;;;;;:::i;:::-;;;;;;;;16814:1107;;;:::o;30128:197::-;30216:22;30224:4;30230:7;30216;:22::i;:::-;30211:108;;30294:7;30303:4;30261:47;;;;;;;;;;;;:::i;:::-;;;;;;;;30211:108;30128:197;;:::o;88:117:1:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:320;8071:6;8108:1;8102:4;8098:12;8088:22;;8155:1;8149:4;8145:12;8176:18;8166:81;;8232:4;8224:6;8220:17;8210:27;;8166:81;8294:2;8286:6;8283:14;8263:18;8260:38;8257:84;;8313:18;;:::i;:::-;8257:84;8078:269;8027:320;;;:::o;8353:118::-;8440:24;8458:5;8440:24;:::i;:::-;8435:3;8428:37;8353:118;;:::o;8477:442::-;8626:4;8664:2;8653:9;8649:18;8641:26;;8677:71;8745:1;8734:9;8730:17;8721:6;8677:71;:::i;:::-;8758:72;8826:2;8815:9;8811:18;8802:6;8758:72;:::i;:::-;8840;8908:2;8897:9;8893:18;8884:6;8840:72;:::i;:::-;8477:442;;;;;;:::o;8925:222::-;9018:4;9056:2;9045:9;9041:18;9033:26;;9069:71;9137:1;9126:9;9122:17;9113:6;9069:71;:::i;:::-;8925:222;;;;:::o;9153:180::-;9201:77;9198:1;9191:88;9298:4;9295:1;9288:15;9322:4;9319:1;9312:15;9339:191;9379:3;9398:20;9416:1;9398:20;:::i;:::-;9393:25;;9432:20;9450:1;9432:20;:::i;:::-;9427:25;;9475:1;9472;9468:9;9461:16;;9496:3;9493:1;9490:10;9487:36;;;9503:18;;:::i;:::-;9487:36;9339:191;;;;:::o;9536:332::-;9657:4;9695:2;9684:9;9680:18;9672:26;;9708:71;9776:1;9765:9;9761:17;9752:6;9708:71;:::i;:::-;9789:72;9857:2;9846:9;9842:18;9833:6;9789:72;:::i;:::-;9536:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1141000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3188",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33919,
									"end": 34152,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "5072616D616E0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "50524D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12558,
									"end": 12563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12555,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12550,
									"end": 12563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12583,
									"end": 12590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12580,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12573,
									"end": 12590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12573,
									"end": 12590,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12484,
									"end": 12597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33966,
									"end": 34005,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 28961,
									"end": 28965,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33974,
									"end": 33992,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33974,
									"end": 33992,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 33994,
									"end": 34004,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 33966,
									"end": 33973,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 33966,
									"end": 33973,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33966,
									"end": 33973,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 33966,
									"end": 34005,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33966,
									"end": 34005,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 33966,
									"end": 34005,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 33966,
									"end": 34005,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 33966,
									"end": 34005,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33966,
									"end": 34005,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34015,
									"end": 34047,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 33888,
									"end": 33912,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 34036,
									"end": 34046,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 34015,
									"end": 34022,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 34015,
									"end": 34022,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34015,
									"end": 34022,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34015,
									"end": 34047,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34015,
									"end": 34047,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 34015,
									"end": 34047,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34015,
									"end": 34047,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 34015,
									"end": 34047,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34015,
									"end": 34047,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34100,
									"end": 34145,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 34106,
									"end": 34116,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 34134,
									"end": 34144,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 34134,
									"end": 34142,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 34134,
									"end": 34142,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34134,
									"end": 34142,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34134,
									"end": 34144,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34134,
									"end": 34144,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 34134,
									"end": 34144,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34134,
									"end": 34144,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 34134,
									"end": 34144,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34128,
									"end": 34130,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 34128,
									"end": 34144,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 34128,
									"end": 34144,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34128,
									"end": 34144,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34128,
									"end": 34144,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 34128,
									"end": 34144,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34128,
									"end": 34144,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 34128,
									"end": 34144,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34118,
									"end": 34125,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 34118,
									"end": 34144,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 34118,
									"end": 34144,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34118,
									"end": 34144,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34118,
									"end": 34144,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 34118,
									"end": 34144,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34118,
									"end": 34144,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 34118,
									"end": 34144,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34100,
									"end": 34105,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 34100,
									"end": 34105,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34100,
									"end": 34105,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34100,
									"end": 34145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34100,
									"end": 34145,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 34100,
									"end": 34145,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34100,
									"end": 34145,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 34100,
									"end": 34145,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29550,
									"end": 29686,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 29550,
									"end": 29686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29627,
									"end": 29631,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29650,
									"end": 29656,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29657,
									"end": 29661,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29650,
									"end": 29662,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29650,
									"end": 29670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29671,
									"end": 29678,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 29650,
									"end": 29679,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29643,
									"end": 29679,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29643,
									"end": 29679,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29550,
									"end": 29686,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29550,
									"end": 29686,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29550,
									"end": 29686,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29550,
									"end": 29686,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29550,
									"end": 29686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13590,
									"end": 13672,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13590,
									"end": 13672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13639,
									"end": 13644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13663,
									"end": 13665,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13656,
									"end": 13665,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13656,
									"end": 13665,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13590,
									"end": 13672,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13590,
									"end": 13672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18264,
									"end": 18472,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18264,
									"end": 18472,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18353,
									"end": 18354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18334,
									"end": 18355,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18334,
									"end": 18355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18334,
									"end": 18341,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18334,
									"end": 18355,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18334,
									"end": 18355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18334,
									"end": 18355,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18330,
									"end": 18421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18330,
									"end": 18421,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18407,
									"end": 18408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 18378,
									"end": 18410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18410,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18330,
									"end": 18421,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18330,
									"end": 18421,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18446,
									"end": 18447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18450,
									"end": 18457,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18459,
									"end": 18464,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18430,
									"end": 18437,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18430,
									"end": 18437,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18430,
									"end": 18465,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18430,
									"end": 18465,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18430,
									"end": 18465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18264,
									"end": 18472,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18264,
									"end": 18472,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18264,
									"end": 18472,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16814,
									"end": 17921,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16814,
									"end": 17921,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16919,
									"end": 16920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16903,
									"end": 16921,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16903,
									"end": 16921,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16903,
									"end": 16907,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16903,
									"end": 16921,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16903,
									"end": 16921,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16903,
									"end": 16921,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17055,
									"end": 17060,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17051,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17039,
									"end": 17051,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17039,
									"end": 17060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17091,
									"end": 17110,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17113,
									"end": 17122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17123,
									"end": 17127,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17113,
									"end": 17128,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17091,
									"end": 17128,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17091,
									"end": 17128,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17160,
									"end": 17165,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17146,
									"end": 17157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17146,
									"end": 17165,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17142,
									"end": 17257,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17142,
									"end": 17257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17142,
									"end": 17257,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17221,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17223,
									"end": 17234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17241,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17192,
									"end": 17242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17192,
									"end": 17242,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17142,
									"end": 17257,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17142,
									"end": 17257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17414,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17395,
									"end": 17406,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17395,
									"end": 17414,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17386,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17387,
									"end": 17391,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17377,
									"end": 17392,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17414,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17414,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17414,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17377,
									"end": 17414,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17077,
									"end": 17439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16899,
									"end": 17439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17467,
									"end": 17468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17453,
									"end": 17469,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17453,
									"end": 17469,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17453,
									"end": 17455,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17453,
									"end": 17469,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17453,
									"end": 17469,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17453,
									"end": 17469,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17632,
									"end": 17637,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17628,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17616,
									"end": 17628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17616,
									"end": 17637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17844,
									"end": 17849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17836,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17837,
									"end": 17839,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17827,
									"end": 17849,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17449,
									"end": 17874,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17904,
									"end": 17906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17898,
									"end": 17902,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17908,
									"end": 17913,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17889,
									"end": 17914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17889,
									"end": 17914,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16814,
									"end": 17921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16814,
									"end": 17921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16814,
									"end": 17921,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16814,
									"end": 17921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8333,
									"end": 8375,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8326,
									"end": 8331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8322,
									"end": 8376,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8425,
									"end": 8432,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8472,
									"end": 8477,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8454,
									"end": 8478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8454,
									"end": 8478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8443,
									"end": 8478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8595,
									"end": 8600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 8577,
									"end": 8601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8577,
									"end": 8601,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8565,
									"end": 8602,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8707,
									"end": 8711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8745,
									"end": 8747,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8734,
									"end": 8743,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8748,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8722,
									"end": 8748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8824,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8811,
									"end": 8828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8802,
									"end": 8808,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 8758,
									"end": 8829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8758,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33804,
									"end": 34265,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9e91838cf2998dfcca9ac829be34be0ae3d93b7fcaab7f0d889206f4c1ba4f164736f6c634300081e0033",
									".code": [
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33804,
											"end": 34265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29261,
											"end": 29463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29261,
											"end": 29463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29261,
											"end": 29463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12662,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12662,
											"end": 12751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14804,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14804,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14804,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13705,
											"end": 13802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15582,
											"end": 15826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15582,
											"end": 15826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15582,
											"end": 15826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30506,
											"end": 30626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30506,
											"end": 30626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30506,
											"end": 30626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30922,
											"end": 31058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30922,
											"end": 31058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13590,
											"end": 13672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13590,
											"end": 13672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 32024,
											"end": 32269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32024,
											"end": 32269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 34158,
											"end": 34263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 34158,
											"end": 34263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13835,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13835,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13835,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29550,
											"end": 29686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29550,
											"end": 29686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29550,
											"end": 29686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12864,
											"end": 12957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12864,
											"end": 12957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28916,
											"end": 28965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28916,
											"end": 28965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14146,
											"end": 14324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14146,
											"end": 14324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14146,
											"end": 14324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33850,
											"end": 33912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 33850,
											"end": 33912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 31338,
											"end": 31476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31338,
											"end": 31476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14357,
											"end": 14497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14357,
											"end": 14497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14357,
											"end": 14497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29346,
											"end": 29350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29384,
											"end": 29416,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29416,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29369,
											"end": 29456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29420,
											"end": 29456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29444,
											"end": 29455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29420,
											"end": 29443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29420,
											"end": 29456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29420,
											"end": 29456,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29420,
											"end": 29456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29456,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29369,
											"end": 29456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29362,
											"end": 29456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29362,
											"end": 29456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12707,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12739,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12732,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12732,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12662,
											"end": 12751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14909,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14909,
											"end": 14921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14893,
											"end": 14921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14893,
											"end": 14921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14940,
											"end": 14945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 14954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14956,
											"end": 14961,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14931,
											"end": 14962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14962,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14931,
											"end": 14962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14983,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14972,
											"end": 14983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14972,
											"end": 14983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14972,
											"end": 14983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13783,
											"end": 13795,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13783,
											"end": 13795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 13795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 13795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15669,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15685,
											"end": 15700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15703,
											"end": 15715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15703,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15703,
											"end": 15715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15703,
											"end": 15715,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15703,
											"end": 15715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15685,
											"end": 15715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15685,
											"end": 15715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15741,
											"end": 15745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15725,
											"end": 15762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15762,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15725,
											"end": 15762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15772,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15790,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15792,
											"end": 15797,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15772,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15772,
											"end": 15798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15772,
											"end": 15798,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15772,
											"end": 15798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15819,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15808,
											"end": 15819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30571,
											"end": 30578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30597,
											"end": 30603,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30604,
											"end": 30608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30597,
											"end": 30609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30619,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30597,
											"end": 30619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30597,
											"end": 30619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30590,
											"end": 30619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30590,
											"end": 30619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31009,
											"end": 31013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30996,
											"end": 31014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31014,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 30996,
											"end": 31014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29204,
											"end": 29208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29193,
											"end": 29209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31026,
											"end": 31051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31037,
											"end": 31041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31050,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31026,
											"end": 31036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31026,
											"end": 31051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31026,
											"end": 31051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31026,
											"end": 31051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31026,
											"end": 31051,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13639,
											"end": 13644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13663,
											"end": 13665,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13590,
											"end": 13672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32139,
											"end": 32151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32139,
											"end": 32149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32139,
											"end": 32151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32139,
											"end": 32151,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32139,
											"end": 32151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32117,
											"end": 32151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32117,
											"end": 32151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32117,
											"end": 32151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32113,
											"end": 32215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32113,
											"end": 32215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32204,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32113,
											"end": 32215,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32113,
											"end": 32215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32225,
											"end": 32262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32237,
											"end": 32241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32243,
											"end": 32261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32225,
											"end": 32236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32225,
											"end": 32262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32225,
											"end": 32262,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32225,
											"end": 32262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32225,
											"end": 32262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32024,
											"end": 32269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33888,
											"end": 33912,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29204,
											"end": 29208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29193,
											"end": 29209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34239,
											"end": 34256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 34245,
											"end": 34247,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34249,
											"end": 34255,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34239,
											"end": 34244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 34239,
											"end": 34256,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34239,
											"end": 34256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 34239,
											"end": 34256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34158,
											"end": 34263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 13907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13926,
											"end": 13935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13936,
											"end": 13943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13919,
											"end": 13944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13919,
											"end": 13944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29627,
											"end": 29631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29656,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29657,
											"end": 29661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29671,
											"end": 29678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29650,
											"end": 29679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12911,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12943,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12936,
											"end": 12950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12936,
											"end": 12950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12864,
											"end": 12957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 28965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28916,
											"end": 28965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14231,
											"end": 14244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14247,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14247,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14247,
											"end": 14259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14259,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14247,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14269,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14279,
											"end": 14284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14290,
											"end": 14295,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14269,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14269,
											"end": 14296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14269,
											"end": 14296,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14269,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14313,
											"end": 14317,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33888,
											"end": 33912,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 33850,
											"end": 33912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33850,
											"end": 33912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31413,
											"end": 31431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 31426,
											"end": 31430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31413,
											"end": 31425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31413,
											"end": 31431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31413,
											"end": 31431,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 31413,
											"end": 31431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29204,
											"end": 29208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29193,
											"end": 29209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29193,
											"end": 29209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31455,
											"end": 31459,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31468,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31443,
											"end": 31469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31443,
											"end": 31469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14463,
											"end": 14474,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14475,
											"end": 14480,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14482,
											"end": 14489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14456,
											"end": 14490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14456,
											"end": 14490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14357,
											"end": 14497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26706,
											"end": 26852,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26706,
											"end": 26852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26782,
											"end": 26786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26820,
											"end": 26845,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26845,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26798,
											"end": 26845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26798,
											"end": 26845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26706,
											"end": 26852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26706,
											"end": 26852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26706,
											"end": 26852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26706,
											"end": 26852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4210,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19660,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19532,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19625,
											"end": 19630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19641,
											"end": 19646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19616,
											"end": 19624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19616,
											"end": 19653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19616,
											"end": 19653,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19616,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21697,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 21221,
											"end": 21697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21347,
											"end": 21372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21357,
											"end": 21362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21364,
											"end": 21371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21347,
											"end": 21372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21372,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21347,
											"end": 21372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21405,
											"end": 21422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21386,
											"end": 21402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21422,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21382,
											"end": 21691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21382,
											"end": 21691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21382,
											"end": 21691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21461,
											"end": 21466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21442,
											"end": 21458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21442,
											"end": 21466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21568,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21438,
											"end": 21568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21520,
											"end": 21527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21547,
											"end": 21552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 21493,
											"end": 21553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21493,
											"end": 21553,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21568,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21438,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21618,
											"end": 21623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21625,
											"end": 21632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21660,
											"end": 21665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21609,
											"end": 21617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21609,
											"end": 21666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21666,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 21609,
											"end": 21666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21382,
											"end": 21691,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21382,
											"end": 21691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21310,
											"end": 21697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16499,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 16199,
											"end": 16499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16298,
											"end": 16299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16282,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16282,
											"end": 16300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16282,
											"end": 16286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16282,
											"end": 16300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16282,
											"end": 16300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16282,
											"end": 16300,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16278,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16278,
											"end": 16364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16350,
											"end": 16351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16323,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16278,
											"end": 16364,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16278,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16445,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16416,
											"end": 16448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16416,
											"end": 16448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16373,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16476,
											"end": 16480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16482,
											"end": 16484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16468,
											"end": 16492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16468,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29895,
											"end": 29998,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29895,
											"end": 29998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29961,
											"end": 29991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29972,
											"end": 29976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29978,
											"end": 29990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29978,
											"end": 29988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29978,
											"end": 29990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29978,
											"end": 29990,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29978,
											"end": 29990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29961,
											"end": 29971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29961,
											"end": 29991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29961,
											"end": 29991,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29961,
											"end": 29991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29895,
											"end": 29998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29895,
											"end": 29998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32952,
											"end": 32956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32973,
											"end": 32995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 32981,
											"end": 32985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32987,
											"end": 32994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32973,
											"end": 32980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32973,
											"end": 32995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32973,
											"end": 32995,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 32973,
											"end": 32995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 32968,
											"end": 33185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33043,
											"end": 33047,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33011,
											"end": 33017,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33018,
											"end": 33022,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33011,
											"end": 33023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33011,
											"end": 33031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33032,
											"end": 33039,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33011,
											"end": 33047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33093,
											"end": 33105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33093,
											"end": 33103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 33093,
											"end": 33105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33093,
											"end": 33105,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33093,
											"end": 33105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33084,
											"end": 33091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33078,
											"end": 33082,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33106,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33127,
											"end": 33131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33120,
											"end": 33131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33120,
											"end": 33131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33120,
											"end": 33131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33120,
											"end": 33131,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33185,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 32968,
											"end": 33185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33169,
											"end": 33174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33162,
											"end": 33174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33162,
											"end": 33174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 33191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33526,
											"end": 33548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 33534,
											"end": 33538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33540,
											"end": 33547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33526,
											"end": 33533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 33526,
											"end": 33548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33526,
											"end": 33548,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 33526,
											"end": 33548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33522,
											"end": 33739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33596,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33564,
											"end": 33570,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33571,
											"end": 33575,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33564,
											"end": 33576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33564,
											"end": 33584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33585,
											"end": 33592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33564,
											"end": 33601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33647,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 33647,
											"end": 33657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 33647,
											"end": 33659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33647,
											"end": 33659,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 33647,
											"end": 33659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33638,
											"end": 33645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33632,
											"end": 33636,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33620,
											"end": 33660,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33681,
											"end": 33685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33674,
											"end": 33685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33674,
											"end": 33685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33674,
											"end": 33685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 33674,
											"end": 33685,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33522,
											"end": 33739,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33522,
											"end": 33739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33723,
											"end": 33728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33716,
											"end": 33728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33716,
											"end": 33728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18264,
											"end": 18472,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 18264,
											"end": 18472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18353,
											"end": 18354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18334,
											"end": 18355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18334,
											"end": 18355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18334,
											"end": 18341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18334,
											"end": 18355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18334,
											"end": 18355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18334,
											"end": 18355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 18330,
											"end": 18421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18407,
											"end": 18408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18378,
											"end": 18410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18410,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18421,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 18330,
											"end": 18421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18430,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18446,
											"end": 18447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18450,
											"end": 18457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 18464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18430,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18430,
											"end": 18465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18430,
											"end": 18465,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18430,
											"end": 18465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18264,
											"end": 18472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18264,
											"end": 18472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18264,
											"end": 18472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20507,
											"end": 20939,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 20507,
											"end": 20939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20636,
											"end": 20637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20619,
											"end": 20638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20619,
											"end": 20638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20619,
											"end": 20624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20619,
											"end": 20638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20619,
											"end": 20638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20619,
											"end": 20638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 20704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 20615,
											"end": 20704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20690,
											"end": 20691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 20661,
											"end": 20693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 20704,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 20615,
											"end": 20704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20736,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20717,
											"end": 20738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20717,
											"end": 20738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20717,
											"end": 20738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20717,
											"end": 20738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 20713,
											"end": 20803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 20761,
											"end": 20792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20803,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 20713,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20842,
											"end": 20847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20824,
											"end": 20829,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20812,
											"end": 20830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20831,
											"end": 20838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20812,
											"end": 20839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20847,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20861,
											"end": 20870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20857,
											"end": 20933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20857,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 20857,
											"end": 20933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20900,
											"end": 20905,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20916,
											"end": 20921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 20891,
											"end": 20922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20922,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20857,
											"end": 20933,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 20857,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20507,
											"end": 20939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20507,
											"end": 20939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20507,
											"end": 20939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20507,
											"end": 20939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20507,
											"end": 20939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16814,
											"end": 17921,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16814,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16919,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 16907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17051,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17039,
											"end": 17051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 17039,
											"end": 17060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17091,
											"end": 17128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17146,
											"end": 17157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17146,
											"end": 17165,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17142,
											"end": 17257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17223,
											"end": 17234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17192,
											"end": 17242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17242,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17257,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17142,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17409,
											"end": 17414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17395,
											"end": 17406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17395,
											"end": 17414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17387,
											"end": 17391,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17377,
											"end": 17392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 17439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 16899,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17467,
											"end": 17468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17453,
											"end": 17469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17453,
											"end": 17469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17453,
											"end": 17469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17632,
											"end": 17637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17628,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17616,
											"end": 17628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17844,
											"end": 17849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17837,
											"end": 17839,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17827,
											"end": 17849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17449,
											"end": 17874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17904,
											"end": 17906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17898,
											"end": 17902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17908,
											"end": 17913,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 17889,
											"end": 17914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16814,
											"end": 17921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16814,
											"end": 17921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16814,
											"end": 17921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16814,
											"end": 17921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30128,
											"end": 30325,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30128,
											"end": 30325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30216,
											"end": 30238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 30224,
											"end": 30228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30230,
											"end": 30237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30216,
											"end": 30223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 30216,
											"end": 30238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30216,
											"end": 30238,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 30216,
											"end": 30238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30211,
											"end": 30319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 30211,
											"end": 30319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30294,
											"end": 30301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30303,
											"end": 30307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 30261,
											"end": 30308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30261,
											"end": 30308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30211,
											"end": 30319,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 30211,
											"end": 30319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30128,
											"end": 30325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30128,
											"end": 30325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30128,
											"end": 30325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8297,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8298,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 8313,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 8458,
											"end": 8463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 8440,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8626,
											"end": 8630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8653,
											"end": 8662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8677,
											"end": 8748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8758,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 8908,
											"end": 8910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8884,
											"end": 8890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8840,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 9069,
											"end": 9140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9333,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 9153,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9201,
											"end": 9278,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9302,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9398,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9393,
											"end": 9418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9393,
											"end": 9418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9432,
											"end": 9452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9461,
											"end": 9477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9461,
											"end": 9477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9500,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 9503,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9697,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9684,
											"end": 9693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9761,
											"end": 9778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9758,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 9708,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 9857,
											"end": 9859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 9789,
											"end": 9861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"PramanToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PramanToken_flattened.sol\":\"Praman\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PramanToken_flattened.sol\":{\"keccak256\":\"0x1e84fa51342b6bc7a1bc35abad02f3b0cb6c2a84340e06bcae3f13ff7cda48cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dc977b8ecec2ed96480e14b87b74df345e8dd2a5a0a43cf942d63750eeb2c6\",\"dweb:/ipfs/QmXE7EMUkqud4P6h7AWj6gW2XBJqg5FMPWD2Tq1ZrksvAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "PramanToken_flattened.sol:Praman",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "PramanToken_flattened.sol:Praman",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "PramanToken_flattened.sol:Praman",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "PramanToken_flattened.sol:Praman",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "PramanToken_flattened.sol:Praman",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 905,
								"contract": "PramanToken_flattened.sol:Praman",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)900_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)900_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)900_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)900_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 897,
										"contract": "PramanToken_flattened.sol:Praman",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 899,
										"contract": "PramanToken_flattened.sol:Praman",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"PramanToken_flattened.sol": {
				"ast": {
					"absolutePath": "PramanToken_flattened.sol",
					"exportedSymbols": {
						"AccessControl": [
							1174
						],
						"Context": [
							129
						],
						"ERC165": [
							885
						],
						"ERC20": [
							771
						],
						"IAccessControl": [
							853
						],
						"IERC1155Errors": [
							265
						],
						"IERC165": [
							864
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Praman": [
							1232
						]
					},
					"id": 1233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "165:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "192:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "274:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "287:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "456:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "465:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "503:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "487:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:57:0"
									},
									"src": "450:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "528:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "687:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "712:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "696:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "735:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "719:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:63:0"
									},
									"src": "681:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "765:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "844:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:9:0"
									},
									"scope": 77,
									"src": "835:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "981:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "991:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:9:0"
									},
									"scope": 77,
									"src": "972:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1046:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1273:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1290:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1282:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1302:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:6:0"
									},
									"scope": 77,
									"src": "1264:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1339:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1617:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1635:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1627:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1650:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1642:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1682:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:9:0"
									},
									"scope": 77,
									"src": "1608:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1697:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2378:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2386:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2385:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:6:0"
									},
									"scope": 77,
									"src": "2369:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2448:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2759:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2772:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2794:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2786:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:6:0"
									},
									"scope": 77,
									"src": "2750:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1233,
							"src": "264:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "3011:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3154:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3154:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3154:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3038:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3136:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3167:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3235:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3265:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:15:0"
									},
									"scope": 100,
									"src": "3226:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3286:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3356:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3362:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3388:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:15:0"
									},
									"scope": 100,
									"src": "3347:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3409:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3488:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3496:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3522:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:7:0"
									},
									"scope": 100,
									"src": "3479:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1233,
							"src": "3126:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3655:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3681:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4196:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4272:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4289:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4293:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4289:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4282:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4219:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4229:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4263:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4262:9:0"
									},
									"scope": 129,
									"src": "4210:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4379:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4396:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4400:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4396:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4389:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4321:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4329:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4363:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:16:0"
									},
									"scope": 129,
									"src": "4312:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4489:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4506:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4499:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4426:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4446:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:9:0"
									},
									"scope": 129,
									"src": "4417:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1233,
							"src": "4178:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "4663:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4689:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4841:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4860:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5180:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5213:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5246:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:49:0"
									},
									"src": "5174:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5260:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5423:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5441:16:0"
									},
									"src": "5417:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5464:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5634:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5663:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5655:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:18:0"
									},
									"src": "5628:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5679:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6035:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6087:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6079:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6106:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6098:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6061:52:0"
									},
									"src": "6029:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6120:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6305:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6334:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6326:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6325:18:0"
									},
									"src": "6299:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6350:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6556:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6584:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:17:0"
									},
									"src": "6550:43:0"
								}
							],
							"scope": 1233,
							"src": "4831:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6597:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6751:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6771:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7001:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7028:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7019:15:0"
									},
									"src": "6995:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7041:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7184:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7206:17:0"
									},
									"src": "7178:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7230:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7530:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7559:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7551:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7592:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7550:48:0"
									},
									"src": "7524:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7605:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7768:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7787:16:0"
									},
									"src": "7762:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7810:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7980:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8010:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8002:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8001:18:0"
									},
									"src": "7974:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8026:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8284:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8319:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8311:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8337:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8329:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8310:35:0"
									},
									"src": "8278:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8352:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8537:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8567:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8559:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8558:18:0"
									},
									"src": "8531:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8583:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8791:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8812:18:0"
									},
									"src": "8785:46:0"
								}
							],
							"scope": 1233,
							"src": "6741:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8835:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8991:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9012:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9384:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9452:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9410:66:0"
									},
									"src": "9378:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9483:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9646:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9666:16:0"
									},
									"src": "9640:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9689:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9859:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9890:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9882:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9881:18:0"
									},
									"src": "9853:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9906:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10173:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10210:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10202:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10228:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10220:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10201:33:0"
									},
									"src": "10167:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10241:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10426:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10457:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10449:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10448:18:0"
									},
									"src": "10420:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10473:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10681:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10712:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10704:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10703:18:0"
									},
									"src": "10675:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10728:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11019:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11053:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11045:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11072:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11064:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11044:41:0"
									},
									"src": "11013:73:0"
								}
							],
							"scope": 1233,
							"src": "8981:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11220:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12035:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12035:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12035:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12044:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12044:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12044:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12052:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12052:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12052:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12068:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12068:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12068:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11250:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12026:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12131:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12087:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12103:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12095:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12087:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12114:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12219:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12147:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12163:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12155:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12147:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12190:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12182:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12174:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12201:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12253:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12237:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12287:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12272:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12272:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12313:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12298:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12298:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12540:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12550:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12558:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12550:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12550:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12573:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12573:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12327:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12510:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12496:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12517:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12495:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12540:0:0"
									},
									"scope": 771,
									"src": "12484:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12722:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12732:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12603:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12671:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12675:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12707:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12707:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12706:15:0"
									},
									"scope": 771,
									"src": "12662:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12926:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12936:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12757:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12873:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12879:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12911:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12910:15:0"
									},
									"scope": 771,
									"src": "12864:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13646:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13663:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13656:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12963:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13599:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13607:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13639:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13639:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13638:7:0"
									},
									"scope": 771,
									"src": "13590:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13766:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13783:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13776:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13678:22:0",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13714:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13725:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13757:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13756:9:0"
									},
									"scope": 771,
									"src": "13705:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13909:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13926:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13926:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13919:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13808:22:0",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13844:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13862:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13853:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13899:9:0"
									},
									"scope": 771,
									"src": "13835:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14221:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14239:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14231:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14231:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14247:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14247:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14231:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14279:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14286:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14269:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14269:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14269:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14306:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "13957:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14172:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14164:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14184:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14176:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14163:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14215:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14215:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14214:6:0"
									},
									"scope": 771,
									"src": "14146:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14446:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14463:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14463:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14463:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14456:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14330:22:0",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14366:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14384:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14376:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14375:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14437:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:9:0"
									},
									"scope": 771,
									"src": "14357:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14883:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14901:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14893:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14893:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14909:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14909:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14893:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "14940:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "14947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "14956:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "14931:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14931:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "14931:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "14972:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14503:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14813:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14829:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14821:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14846:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14838:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14820:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14877:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14876:6:0"
									},
									"scope": 771,
									"src": "14804:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15675:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15693:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15685:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15685:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15703:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15703:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15685:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15741:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15756:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15725:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15725:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15725:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15782:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15788:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15772:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15772:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15772:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15808:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "14996:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15591:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15612:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15604:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15626:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15638:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15630:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15603:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15669:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15668:6:0"
									},
									"scope": 771,
									"src": "15582:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16268:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16282:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16290:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16290:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16282:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16278:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16302:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16323:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16323:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16316:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16377:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16391:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16383:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16383:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16377:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16373:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16395:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16445:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16437:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16437:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16437:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16416:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16416:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16409:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16476:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16482:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16486:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16468:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16468:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15832:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16208:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16226:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16218:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16240:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16244:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16217:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16268:0:0"
									},
									"scope": 771,
									"src": "16199:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16889:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16903:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16911:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16911:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16903:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17077:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17099:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17091:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17091:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17113:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17113:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17091:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17146:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17160:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17146:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17142:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17167:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17217:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17223:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17236:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17192:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17192:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17185:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17270:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17377:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17387:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17377:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17395:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17409:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17395:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17377:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17377:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16899:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16923:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17039:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17055:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17039:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17039:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17453:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17459:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17459:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17453:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17668:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17682:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17827:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17837:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17827:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17844:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17827:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17827:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17449:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17471:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17485:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17616:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17632:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17616:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17616:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17898:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17904:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17908:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17889:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17889:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17884:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16505:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16823:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16853:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16845:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16830:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16889:0:0"
									},
									"scope": 771,
									"src": "16814:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18320:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18353:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18345:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18345:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18334:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18330:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18357:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18407:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18399:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18399:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18399:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18378:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18378:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18371:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18438:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18438:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18438:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18450:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18430:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18430:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "17927:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18273:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18278:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18320:0:0"
									},
									"scope": 771,
									"src": "18264:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18846:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18879:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18871:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18871:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18860:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18856:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18883:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18931:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18923:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18923:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18923:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18904:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18904:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18897:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "18962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18971:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18971:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18971:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "18983:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18954:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "18954:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18478:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18799:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18804:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18846:0:0"
									},
									"scope": 771,
									"src": "18790:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19606:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19625:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19616:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19616:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19616:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19002:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19541:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19550:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19590:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19582:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19549:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19606:0:0"
									},
									"scope": 771,
									"src": "19532:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20605:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20619:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20628:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20628:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20619:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20615:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20640:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20690:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20682:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20682:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20682:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20661:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20661:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20654:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20717:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20736:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20728:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20728:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20728:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20717:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20713:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20740:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20789:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20781:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20781:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20781:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20761:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20761:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20754:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20812:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20824:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20812:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20812:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20842:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20812:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20812:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20861:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20857:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20872:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20900:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20907:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20916:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20891:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20891:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20886:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19666:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20516:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20577:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20524:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20605:0:0"
									},
									"scope": 771,
									"src": "20507:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21310:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21328:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21320:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21347:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21347:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21320:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21386:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21410:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21405:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21405:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21419:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21405:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21386:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21382:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21424:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21442:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21461:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21442:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21438:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21468:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21520:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21529:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21547:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21493:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21493:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21486:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21581:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21618:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21625:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21634:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21653:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21634:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21660:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21609:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21609:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21609:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "20945:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21230:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21269:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21286:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21245:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21310:0:0"
									},
									"scope": 771,
									"src": "21221:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1233,
							"src": "12008:9691:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "21839:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21865:90:0",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 853,
							"linearizedBaseContracts": [
								853
							],
							"name": "IAccessControl",
							"nameLocation": "21966:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "21987:56:0",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 780,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "22054:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "22112:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22104:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 777,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22086:37:0"
									},
									"src": "22048:76:0"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "22130:148:0",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 783,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "22289:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22317:2:0"
									},
									"src": "22283:37:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "22326:254:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 792,
									"name": "RoleAdminChanged",
									"nameLocation": "22591:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "22624:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "22608:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "22646:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "22630:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "22681:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "22665:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22607:87:0"
									},
									"src": "22585:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "22701:295:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 801,
									"name": "RoleGranted",
									"nameLocation": "23007:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "23035:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "23019:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 794,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23057:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "23041:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23082:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "23066:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23018:71:0"
									},
									"src": "23001:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "23096:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 810,
									"name": "RoleRevoked",
									"nameLocation": "23382:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "23410:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "23394:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 803,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "23416:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23457:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "23441:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23393:71:0"
									},
									"src": "23376:89:0"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "23471:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "23561:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "23577:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "23569:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 812,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23591:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "23583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23568:31:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "23623:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23622:6:0"
									},
									"scope": 853,
									"src": "23552:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "23635:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "23833:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "23854:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23846:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 822,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23845:14:0"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23883:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23882:9:0"
									},
									"scope": 853,
									"src": "23824:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "23898:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "24151:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "24169:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "24161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 830,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24183:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "24175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24160:31:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24200:0:0"
									},
									"scope": 853,
									"src": "24142:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "24207:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "24444:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "24463:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "24455:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "24469:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24454:31:0"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24494:0:0"
									},
									"scope": 853,
									"src": "24435:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "24501:491:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "25006:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "25027:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "25019:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "25041:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "25033:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25018:42:0"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25069:0:0"
									},
									"scope": 853,
									"src": "24997:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1233,
							"src": "21956:3116:0",
							"usedErrors": [
								780,
								783
							],
							"usedEvents": [
								792,
								801,
								810
							]
						},
						{
							"id": 854,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "25224:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 855,
								"nodeType": "StructuredDocumentation",
								"src": "25251:280:0",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 864,
							"linearizedBaseContracts": [
								864
							],
							"name": "IERC165",
							"nameLocation": "25542:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "25556:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "25910:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "25935:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "25928:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 857,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "25928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25927:20:0"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "25971:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25970:6:0"
									},
									"scope": 864,
									"src": "25901:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1233,
							"src": "25532:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26129:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 867,
										"name": "IERC165",
										"nameLocations": [
											"26664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "26664:7:0"
									},
									"id": 868,
									"nodeType": "InheritanceSpecifier",
									"src": "26664:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 866,
								"nodeType": "StructuredDocumentation",
								"src": "26156:479:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 885,
							"linearizedBaseContracts": [
								885,
								864
							],
							"name": "ERC165",
							"nameLocation": "26654:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										863
									],
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "26788:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "26805:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "26825:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$864_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$864_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 877,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "26820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26820:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$864",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "26834:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "26820:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "26805:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 875,
												"id": 882,
												"nodeType": "Return",
												"src": "26798:47:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "26678:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "26715:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "26740:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "26733:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 870,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "26733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26732:20:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "26782:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26781:6:0"
									},
									"scope": 885,
									"src": "26706:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1233,
							"src": "26636:218:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26992:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 888,
										"name": "Context",
										"nameLocations": [
											"28717:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "28717:7:0"
									},
									"id": 889,
									"nodeType": "InheritanceSpecifier",
									"src": "28717:7:0"
								},
								{
									"baseName": {
										"id": 890,
										"name": "IAccessControl",
										"nameLocations": [
											"28726:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 853,
										"src": "28726:14:0"
									},
									"id": 891,
									"nodeType": "InheritanceSpecifier",
									"src": "28726:14:0"
								},
								{
									"baseName": {
										"id": 892,
										"name": "ERC165",
										"nameLocations": [
											"28742:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "28742:6:0"
									},
									"id": 893,
									"nodeType": "InheritanceSpecifier",
									"src": "28742:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "27021:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 1174,
							"linearizedBaseContracts": [
								1174,
								885,
								864,
								853,
								129
							],
							"name": "AccessControl",
							"nameLocation": "28700:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 900,
									"members": [
										{
											"constant": false,
											"id": 897,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "28814:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 900,
											"src": "28781:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 896,
												"keyName": "account",
												"keyNameLocation": "28797:7:0",
												"keyType": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "28781:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 899,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "28839:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 900,
											"src": "28831:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 898,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "28831:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "28762:8:0",
									"nodeType": "StructDefinition",
									"scope": 1174,
									"src": "28755:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 905,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "28903:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "28861:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 904,
										"keyName": "role",
										"keyNameLocation": "28877:4:0",
										"keyType": {
											"id": 901,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "28869:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "28861:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 903,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 902,
												"name": "RoleData",
												"nameLocations": [
													"28885:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 900,
												"src": "28885:8:0"
											},
											"referencedDeclaration": 900,
											"src": "28885:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$900_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 908,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "28940:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "28916:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 906,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "28916:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28961:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "29183:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "29204:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 913,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															993
														],
														"referencedDeclaration": 972,
														"src": "29193:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29193:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "29193:16:0"
											},
											{
												"id": 917,
												"nodeType": "PlaceholderStatement",
												"src": "29219:1:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "28972:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 919,
									"name": "onlyRole",
									"nameLocation": "29160:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "29177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "29169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 910,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:14:0"
									},
									"src": "29151:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										884
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "29352:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 928,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "29369:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 930,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "29389:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$853_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$853_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 929,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "29384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29384:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$853",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "29405:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "29384:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "29369:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 936,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "29444:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 934,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "29420:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$1174_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29426:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 884,
															"src": "29420:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29420:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29369:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 927,
												"id": 939,
												"nodeType": "Return",
												"src": "29362:94:0"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "29233:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "29270:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 924,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29328:8:0"
									},
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "29295:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "29288:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 921,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29287:20:0"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "29346:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29345:6:0"
									},
									"scope": 1174,
									"src": "29261:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										820
									],
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "29633:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 951,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "29650:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 953,
															"indexExpression": {
																"id": 952,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29657:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29650:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$900_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29663:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 897,
														"src": "29650:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 956,
													"indexExpression": {
														"id": 955,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "29671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29650:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 950,
												"id": 957,
												"nodeType": "Return",
												"src": "29643:36:0"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "29469:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "29559:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "29575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "29567:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 943,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "29589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "29581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29566:31:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "29627:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29627:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29626:6:0"
									},
									"scope": 1174,
									"src": "29550:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "29951:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "29972:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 967,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "29978:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29978:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 965,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															993
														],
														"referencedDeclaration": 993,
														"src": "29961:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29961:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "29961:30:0"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "29692:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "29904:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "29923:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "29915:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 961,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29914:14:0"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29951:0:0"
									},
									"scope": 1174,
									"src": "29895:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "30201:124:0",
										"statements": [
											{
												"condition": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "30215:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 981,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "30224:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 982,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "30230:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 980,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "30216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30216:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"nodeType": "IfStatement",
												"src": "30211:108:0",
												"trueBody": {
													"id": 990,
													"nodeType": "Block",
													"src": "30240:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 986,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "30294:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 987,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "30303:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 985,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "30261:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30261:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 989,
															"nodeType": "RevertStatement",
															"src": "30254:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "30004:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "30137:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "30156:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "30148:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "30162:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30147:31:0"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30201:0:0"
									},
									"scope": 1174,
									"src": "30128:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										828
									],
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "30580:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1001,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "30597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 1003,
														"indexExpression": {
															"id": 1002,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "30604:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "30597:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$900_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30610:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 899,
													"src": "30597:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1005,
												"nodeType": "Return",
												"src": "30590:29:0"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "30331:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "30515:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "30536:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "30528:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 995,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30527:14:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "30571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 998,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30570:9:0"
									},
									"scope": 1174,
									"src": "30506:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "31016:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "31037:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1022,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "31043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1020,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "31026:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31026:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "31026:25:0"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "30632:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1016,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "31009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1015,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "30996:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30996:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1018,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyRole",
												"nameLocations": [
													"30987:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 919,
												"src": "30987:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30987:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "30931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "30949:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "30941:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "30955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30940:31:0"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31016:0:0"
									},
									"scope": 1174,
									"src": "30922:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "31433:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "31455:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1041,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "31461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1039,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "31443:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31443:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "31443:26:0"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "31064:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1035,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "31426:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1034,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "31413:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31413:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1033,
												"name": "onlyRole",
												"nameLocations": [
													"31404:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 919,
												"src": "31404:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31404:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "31347:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "31366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "31358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "31380:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "31372:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31357:31:0"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31433:0:0"
									},
									"scope": 1174,
									"src": "31338:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										852
									],
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "32103:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1053,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "32117:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1054,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "32139:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32139:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32117:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1061,
												"nodeType": "IfStatement",
												"src": "32113:102:0",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "32153:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1057,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "32174:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32174:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1059,
															"nodeType": "RevertStatement",
															"src": "32167:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1063,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "32237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1064,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "32243:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1062,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "32225:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32225:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "32225:37:0"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "31482:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "32033:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "32054:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "32046:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "32068:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "32060:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32045:42:0"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32103:0:0"
									},
									"scope": 1174,
									"src": "32024:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "32467:174:0",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "32485:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "32477:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1076,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "32477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"arguments": [
														{
															"id": 1079,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "32518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1078,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "32505:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32505:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32477:46:0"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1082,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "32533:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 1084,
															"indexExpression": {
																"id": 1083,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "32540:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32533:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$900_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "32546:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "32533:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1086,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "32558:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "32533:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "32533:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1090,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "32599:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1091,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "32605:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1092,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "32624:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1089,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "32582:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32582:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "EmitStatement",
												"src": "32577:57:0"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "32275:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "32403:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "32425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "32417:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "32439:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "32431:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1072,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32416:33:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32467:0:0"
									},
									"scope": 1174,
									"src": "32394:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "32958:233:0",
										"statements": [
											{
												"condition": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "32972:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1107,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "32981:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1108,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "32987:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1106,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "32973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32973:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "33148:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33169:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1105,
															"id": 1131,
															"nodeType": "Return",
															"src": "33162:12:0"
														}
													]
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "32968:217:0",
												"trueBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "32997:145:0",
													"statements": [
														{
															"expression": {
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1111,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "33011:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1113,
																			"indexExpression": {
																				"id": 1112,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "33018:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33011:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$900_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33024:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 897,
																		"src": "33011:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1116,
																	"indexExpression": {
																		"id": 1115,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "33032:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33011:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33043:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "33011:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1119,
															"nodeType": "ExpressionStatement",
															"src": "33011:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1121,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "33078:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1122,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "33084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "33093:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33093:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1120,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "33066:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33066:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1126,
															"nodeType": "EmitStatement",
															"src": "33061:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33127:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1105,
															"id": 1128,
															"nodeType": "Return",
															"src": "33120:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "32647:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "32884:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "32903:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "32895:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "32909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32894:31:0"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "32952:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32951:6:0"
									},
									"scope": 1174,
									"src": "32875:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "33512:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1146,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "33534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1147,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "33540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1145,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "33526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33526:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "33702:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33723:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1144,
															"id": 1169,
															"nodeType": "Return",
															"src": "33716:12:0"
														}
													]
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "33522:217:0",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "33550:146:0",
													"statements": [
														{
															"expression": {
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1149,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "33564:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$900_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1151,
																			"indexExpression": {
																				"id": 1150,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "33571:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33564:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$900_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33577:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 897,
																		"src": "33564:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1154,
																	"indexExpression": {
																		"id": 1153,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "33585:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33564:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33596:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "33564:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "33564:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1159,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "33632:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1160,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "33638:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1161,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "33647:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33647:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1158,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "33620:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33620:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1164,
															"nodeType": "EmitStatement",
															"src": "33615:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33681:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1144,
															"id": 1166,
															"nodeType": "Return",
															"src": "33674:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "33197:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "33437:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "33457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "33449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33471:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "33463:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33448:31:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "33506:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33505:6:0"
									},
									"scope": 1174,
									"src": "33428:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1233,
							"src": "28682:5065:0",
							"usedErrors": [
								780,
								783
							],
							"usedEvents": [
								792,
								801,
								810
							]
						},
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33776:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1176,
										"name": "ERC20",
										"nameLocations": [
											"33823:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "33823:5:0"
									},
									"id": 1177,
									"nodeType": "InheritanceSpecifier",
									"src": "33823:5:0"
								},
								{
									"baseName": {
										"id": 1178,
										"name": "AccessControl",
										"nameLocations": [
											"33830:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1174,
										"src": "33830:13:0"
									},
									"id": 1179,
									"nodeType": "InheritanceSpecifier",
									"src": "33830:13:0"
								}
							],
							"canonicalName": "Praman",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1232,
							"linearizedBaseContracts": [
								1232,
								1174,
								885,
								864,
								853,
								771,
								170,
								100,
								77,
								129
							],
							"name": "Praman",
							"nameLocation": "33813:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1184,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "33874:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1232,
									"src": "33850:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1180,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "33850:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1182,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "33898:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1181,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "33888:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "33888:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "33956:196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "33974:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1193,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33994:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33998:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33994:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1191,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "33966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33966:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "33966:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "34023:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34036:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34040:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34036:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1197,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "34015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34015:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "34015:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34106:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34110:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34128:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1208,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "34134:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34134:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "34128:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34118:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "34100:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34100:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "34100:45:0"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5072616d616e",
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33939:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_770e774f36e33b0206bfebc023dd4e69f2708b95dfc32f28880ef981e8e8bcc3",
														"typeString": "literal_string \"Praman\""
													},
													"value": "Praman"
												},
												{
													"hexValue": "50524d",
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9761741c22469b4a5c75835547f99148d66f6da17c90e55eed433c729151ff62",
														"typeString": "literal_string \"PRM\""
													},
													"value": "PRM"
												}
											],
											"id": 1189,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1186,
												"name": "ERC20",
												"nameLocations": [
													"33933:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "33933:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33933:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33930:2:0"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33956:0:0"
									},
									"scope": 1232,
									"src": "33919:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "34229:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "34245:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "34249:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1225,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "34239:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34239:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "34239:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1222,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "34216:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1221,
												"name": "onlyRole",
												"nameLocations": [
													"34207:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 919,
												"src": "34207:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34207:21:0"
										}
									],
									"name": "mint",
									"nameLocation": "34167:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34180:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "34172:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34192:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "34184:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34171:28:0"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34229:0:0"
									},
									"scope": 1232,
									"src": "34158:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1233,
							"src": "33804:461:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								780,
								783
							],
							"usedEvents": [
								11,
								20,
								792,
								801,
								810
							]
						}
					],
					"src": "165:34101:0"
				},
				"id": 0
			}
		}
	}
}